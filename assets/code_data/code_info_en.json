[
  {
    "code": "^name$",
    "translate": "name",
    "section": "core",
    "description": "Defines the unit raw name, game uses it to identify as a unique name. (This is not displayed in-game)"
  },
  {
    "code": "^mass$",
    "translate": "mass",
    "section": "core",
    "description": "The 'weight' of the unit, defines how it collides with other units, a greater value means it's tougher to push."
  },
  {
    "code": "^radius$",
    "translate": "radius",
    "section": "core",
    "description": "Circular area around the unit that makes it selectable. (mouse click/screen touch)"
  },
  {
    "code": "^price$",
    "translate": "price",
    "section": "core",
    "description": "The unit cost from builders/buildings. Defaults to credits if no resource type is used"
  },
  {
    "code": "^maxHp$",
    "translate": "maxHp",
    "section": "core",
    "description": "The max health for the unit. (will spawn with this value)."
  },
  {
    "code": "^buildSpeed$",
    "translate": "buildSpeed",
    "section": "core",
    "description": "Time it takes to build the unit. (may multiply with builder speed)"
  },
  {
    "code": "^class$",
    "translate": "class",
    "section": "core",
    "description": "Reserved for future use, must be CustomUnitMetadata by default."
  },
  {
    "code": "^techLevel$",
    "translate": "techLevel",
    "section": "core",
    "description": "Defines the Tech Level of the unit, there're 3 levels and each will appear in a different color in the GUI."
  },
  {
    "code": "^altNames$",
    "translate": "altNames",
    "section": "core",
    "description": "Comma separated list of names. Like name but lower priority, useful for multiple optional mods."
  },
  {
    "code": "^strictLevel$",
    "translate": "strictLevel",
    "section": "core",
    "description": "Defaults to 0. 1 = Errors if keys are duplicated. Add to \"all-units.template\" in root to apply to all units."
  },
  {
    "code": "^isBio$",
    "translate": "isBio",
    "section": "core",
    "description": "Choose whether the unit is bioligical or not, affects sound and splat (unless hideScorchMark:true)"
  },
  {
    "code": "^isBug$",
    "translate": "isBug",
    "section": "core",
    "description": "Changes some death defaults, and sort order in Sandbox."
  },
  {
    "code": "^isBuilder$",
    "translate": "isBuilder",
    "section": "core",
    "description": "Normally required if this unit places buildings. Defaults to [ai]useAsBuilder."
  },
  {
    "code": "^streamingCost$",
    "translate": "streamingCost",
    "section": "core",
    "description": "Like price but paid for overtime while this unit is being queued or built. Construction or queue is paused if resources run out while building."
  },
  {
    "code": "^switchPriceWithStreamingCost$",
    "translate": "switchPriceWithStreamingCost",
    "section": "core",
    "description": "Shortcut to set streamingCost to price value and clear price, add to all-units.template to quickly switch a mod over to streaming resources."
  },
  {
    "code": "^selfRegenRate$",
    "translate": "selfRegenRate",
    "section": "core",
    "description": "Passive self repair rate."
  },
  {
    "code": "^maxShield$",
    "translate": "maxShield",
    "section": "core",
    "description": "The max shield hitpoints of the unit. Can start with 0 hitpoints if startShieldAtZero:true."
  },
  {
    "code": "^startShieldAtZero$",
    "translate": "startShieldAtZero",
    "section": "core",
    "description": "Unit starts with a 0 hitpoints shield on created if true."
  },
  {
    "code": "^shieldRegen$",
    "translate": "shieldRegen",
    "section": "core",
    "description": "Passive shield regen rate."
  },
  {
    "code": "^energyMax$",
    "translate": "energyMax",
    "section": "core",
    "description": "Defaults to 0. Energy that can be used as ammo for turrets, laser defense and actions."
  },
  {
    "code": "^energyRegen$",
    "translate": "energyRegen",
    "section": "core",
    "description": "Passive energy regen rate."
  },
  {
    "code": "^energyStartingPercentage$",
    "translate": "energyStartingPercentage",
    "section": "core",
    "description": "Sets the percentage of charged energy when the unit is first built."
  },
  {
    "code": "^energyNeedsToRechargeToFull$",
    "translate": "energyNeedsToRechargeToFull",
    "section": "core",
    "description": "Disables weapons using energy after reaching zero till fully recharged if true."
  },
  {
    "code": "^energyRegenWhenRecharging$",
    "translate": "energyRegenWhenRecharging",
    "section": "core",
    "description": "Regen rate while recharging."
  },
  {
    "code": "^armour$",
    "translate": "armour",
    "section": "core",
    "description": "Damage taken away from each hit. (not currently used in any vanilla units)"
  },
  {
    "code": "^armourMinDamageToKeep$",
    "translate": "armourMinDamageToKeep",
    "section": "core",
    "description": "Min damage to keep from received damage. Defaults to 1."
  },
  {
    "code": "^borrowResourcesWhileAlive$",
    "translate": "borrowResourcesWhileAlive",
    "section": "core",
    "description": "Takes these resources when created and returns them when removed or destroyed."
  },
  {
    "code": "^borrowResourcesWhileBuilt$",
    "translate": "borrowResourcesWhileBuilt",
    "section": "core",
    "description": "Like borrowResourcesWhileAlive but doesn't take affect till built. Mostly useful for buildings like houses that have negative resources to add to the unit cap, etc."
  },
  {
    "code": "^generation_resources$",
    "translate": "generation_resources",
    "section": "core",
    "description": "Income unit creates. (custom resource version)"
  },
  {
    "code": "^generation_active$",
    "translate": "generation_active",
    "section": "core",
    "description": "Disables generation_resources/credits when false. (logic_boolean)"
  },
  {
    "code": "^generation_credits$",
    "translate": "generation_credits",
    "section": "core",
    "description": "Income unit creates. (credits only)"
  },
  {
    "code": "^generation_delay$",
    "translate": "generation_delay",
    "section": "core",
    "description": "How often generation_resources/credits is added. Defaults to 40. (changing not recommended)"
  },
  {
    "code": "^showInEditor$",
    "translate": "showInEditor",
    "section": "core",
    "description": "Set to false to hide unit in Sandbox editor. (Defaults to true)"
  },
  {
    "code": "^displayText(_.+)?$",
    "translate": "displayText",
    "section": "core",
    "description": "The unit name that the game shows to the player."
  },
  {
    "code": "^displayDescription(_.+)?$",
    "translate": "displayDescription",
    "section": "core",
    "description": "Unit description that the game shows to the player."
  },
  {
    "code": "^text(_.+)?$",
    "translate": "text",
    "section": "action",
    "description": "Labels the action. Supports dynamic text"
  },
  {
    "code": "^isLockedMessage(_.+)?$",
    "translate": "isLockedMessage",
    "section": "canBuild",
    "description": "Set to tell to players why a unit is locked."
  },
  {
    "code": "^description(_.+)?$",
    "translate": "description",
    "section": "canBuild",
    "description": "A display text when you select your unit's action, used to explain it's purpose. Supports dynamic text"
  },
  {
    "code": "^showMessageToPlayer(_.+)?$",
    "translate": "showMessageToPlayer",
    "section": "canBuild",
    "description": "Sends a message to the player controlling the unit"
  },
  {
    "code": "^displayLocaleKey$",
    "translate": "displayLocaleKey",
    "section": "core",
    "description": "Translation file key for unit name and description."
  },
  {
    "code": "^displayRadius$",
    "translate": "displayRadius",
    "section": "core",
    "description": "Defaults to radius value. Set to show a larger or smaller selection circle UI on units."
  },
  {
    "code": "^uiTargetRadius$",
    "translate": "uiTargetRadius",
    "section": "core",
    "description": "Defaults to displayRadius value. Radius used when attacking/reclaiming/etc this unit"
  },
  {
    "code": "^shieldRenderRadius$",
    "translate": "shieldRenderRadius",
    "section": "core",
    "description": "Defaults is a little bigger than radius. Set to show a larger or smaller shield circle on units."
  },
  {
    "code": "^shieldDisplayOnlyDeflection$",
    "translate": "shieldDisplayOnlyDeflection",
    "section": "core",
    "description": "Hide shield unless deflecting shot if true."
  },
  {
    "code": "^shieldDeflectionDisplayRate$",
    "translate": "shieldDeflectionDisplayRate",
    "section": "core",
    "description": "Defaults to 4. High value causes shield deflection to fade disappear faster."
  },
  {
    "code": "^showOnMinimap$",
    "translate": "showOnMinimap",
    "section": "core",
    "description": "Defaults to true. Hide units on minimap if false."
  },
  {
    "code": "^showActionsWithMixedSelectionIfOtherUnitsHaveTag$",
    "translate": "showActionsWithMixedSelectionIfOtherUnitsHaveTag",
    "section": "core",
    "description": "Shows a merged action list if all units selected includes one of these tags. Useful for converted units."
  },
  {
    "code": "^showOnMinimapToEnemies$",
    "translate": "showOnMinimapToEnemies",
    "section": "core",
    "description": "Useful for stealth units"
  },
  {
    "code": "^isBuilding$",
    "translate": "isBuilding",
    "section": "core",
    "description": "Defines if the unit is a building."
  },
  {
    "code": "^footprint$",
    "translate": "footprint",
    "section": "core",
    "description": "Left, up, right, down. Tiles taken up which block unit movement. Defaults to 0,0,0,0  = 1 center tile."
  },
  {
    "code": "^constructionFootprint$",
    "translate": "constructionFootprint",
    "section": "core",
    "description": "Tiles taken up for placement of other buildings. Defaults to 0,0,0,0 = 1 center tile."
  },
  {
    "code": "^displayFootprint$",
    "translate": "displayFootprint",
    "section": "core",
    "description": "Left, up, right, down. Only applies to buildings, just used for GUI. Defaults to footprint."
  },
  {
    "code": "^buildingSelectionOffset$",
    "translate": "buildingSelectionOffset",
    "section": "core",
    "description": "Defaults to 0. Adds or removes padding on the drawn selection rect in UI."
  },
  {
    "code": "^buildingToFootprintOffsetX$",
    "translate": "buildingToFootprintOffsetX",
    "section": "core",
    "description": "Defaults to 10. Change the building position in the footprint on the X-axis."
  },
  {
    "code": "^buildingToFootprintOffsetY$",
    "translate": "buildingToFootprintOffsetY",
    "section": "core",
    "description": "Defaults to 10. Change the building position in the footprint on the Y-axis."
  },
  {
    "code": "^placeOnlyOnResPool$",
    "translate": "placeOnlyOnResPool",
    "section": "core",
    "description": "Normally used for extractors, forces building construction in a resource pool."
  },
  {
    "code": "^selfBuildRate$",
    "translate": "selfBuildRate",
    "section": "core",
    "description": "Rate unit builds itself when placed without a builder."
  },
  {
    "code": "^ignoreInUnitCapCalculation$",
    "translate": "ignoreInUnitCapCalculation",
    "section": "core",
    "description": "defaults to true for buildings otherwise false. Set to true to not count this unit in unit cap."
  },
  {
    "code": "^copyFrom$",
    "translate": "copyFrom",
    "section": "core",
    "description": "Uses unit data from another ini file as default for this unit, supports multiple files."
  },
  {
    "code": "^dont_load$",
    "translate": "dont_load",
    "section": "core",
    "description": "Do not load unit, and don't error on missing data. Can be useful when used with copyFrom."
  },
  {
    "code": "^overrideAndReplace$",
    "translate": "overrideAndReplace",
    "section": "core",
    "description": "Overrides another unit with this unit. Build links and map positions to target unit will be replaced."
  },
  {
    "code": "^onNewMapSpawn$",
    "translate": "onNewMapSpawn",
    "section": "core",
    "description": "Values: emptyResourcePools_asNeutral, emptyOrOccupiedResourcePools_asNeutral, mapCenter_asNeutral, mapCenter_eachActiveTeam, spawnPoint_eachActiveTeam (1.15)"
  },
  {
    "code": "^globalScale$",
    "translate": "globalScale",
    "section": "core",
    "description": "Defaults to 1. Changing not recommended."
  },
  {
    "code": "^isLocked$",
    "translate": "isLocked",
    "section": "core",
    "description": "Disallow building of this unit. Can be used with overrideAndReplace to restrict units player can build."
  },
  {
    "code": "^isLockedIfGameModeNoNuke$",
    "translate": "isLockedIfGameModeNoNuke",
    "section": "core",
    "description": "Disallows building of this unit if nukes are disabled during match setup."
  },
  {
    "code": "^experimental$",
    "translate": "experimental",
    "section": "core",
    "description": "Tag unit as experimental. Affects zoomed out icon and end game stats."
  },
  {
    "code": "^stayNeutral$",
    "translate": "stayNeutral",
    "section": "core",
    "description": "Set to false to disable capture when unit is on the neutral team."
  },
  {
    "code": "^createNeutral$",
    "translate": "createNeutral",
    "section": "core",
    "description": "Set to true to always spawn the unit on the neutral team."
  },
  {
    "code": "^createOnAggressiveTeam$",
    "translate": "createOnAggressiveTeam",
    "section": "core",
    "description": "Set to true to always spawn the unit on aggressive teams on single player matches."
  },
  {
    "code": "^tags$",
    "translate": "tags",
    "section": "core",
    "description": "List of comma separated strings. Used to classify units, create special actions and balances."
  },
  {
    "code": "^defineUnitMemory$",
    "translate": "defineUnitMemory",
    "section": "core",
    "description": "Can define several variables for custom storage, unique for each unit. Allowed types: boolean, float/number, unit, string."
  },
  {
    "code": "^fogOfWarSightRange$",
    "translate": "fogOfWarSightRange",
    "section": "core",
    "description": "Sets number of tiles this unit can see through the fog of war. Defaults to 15."
  },
  {
    "code": "^fogOfWarSightRangeWhileNotBuilt$",
    "translate": "fogOfWarSightRangeWhileNotBuilt",
    "section": "core",
    "description": "Fog of War range when unit/building is incomplete. Defaults to fogOfWarSightRange"
  },
  {
    "code": "^softCollisionOnAll$",
    "translate": "softCollisionOnAll",
    "section": "core",
    "description": "Creates a soft collision effect when touching other units."
  },
  {
    "code": "^disableAllUnitCollisions$",
    "translate": "disableAllUnitCollisions",
    "section": "core",
    "description": "Unit cannot collide with others if true."
  },
  {
    "code": "^isUnrepairableUnit$",
    "translate": "isUnrepairableUnit",
    "section": "core",
    "description": "No unit can repair this unit if true."
  },
  {
    "code": "^isUnselectable$",
    "translate": "isUnselectable",
    "section": "core",
    "description": "If true unit cannot be selected. (includes AI players)"
  },
  {
    "code": "^isUnselectableAsTarget$",
    "translate": "isUnselectableAsTarget",
    "section": "core",
    "description": "Defaults to isUnselectable. Can be used to create units that cannot be selected but can be targeted for attack, reclaim, etc"
  },
  {
    "code": "^d$",
    "translate": "d",
    "section": "core",
    "description": "If true, unit is added to dropdowns for starting unit in game setup menus."
  },
  {
    "code": "^startFallingWhenStartingUnit$",
    "translate": "startFallingWhenStartingUnit",
    "section": "core",
    "description": "Unit will appear falling from skies when starting unit if true."
  },
  {
    "code": "^soundOnAttackOrder$",
    "translate": "soundOnAttackOrder",
    "section": "core",
    "description": "List of sound names. Only one will be played on each attack order. Only .ogg and .wav formats."
  },
  {
    "code": "^soundOnMoveOrder$",
    "translate": "soundOnMoveOrder",
    "section": "core",
    "description": "List of sound names. Only one will be played on each move order. Only .ogg and .wav formats."
  },
  {
    "code": "^soundOnNewSelection$",
    "translate": "soundOnNewSelection",
    "section": "core",
    "description": "List of sound names. Only one will be played on each unit selection. Only .ogg and .wav formats."
  },
  {
    "code": "^canNotBeDirectlyAttacked$",
    "translate": "canNotBeDirectlyAttacked",
    "section": "core",
    "description": "No unit can directly target this unit. If true this will also skip this unit in victory/defeat checks. If true, canNotBeDamaged is true by default"
  },
  {
    "code": "^canNotBeDamaged$",
    "translate": "canNotBeDamaged",
    "section": "core",
    "description": "Defaults to value of canNotBeDirectlyAttacked (be careful setting this without canNotBeDirectlyAttacked, as AI will attack forever)"
  },
  {
    "code": "^canNotBeGivenOrdersByPlayer$",
    "translate": "canNotBeGivenOrdersByPlayer",
    "section": "core",
    "description": "If true unit will not take player or AI orders."
  },
  {
    "code": "^canOnlyBeAttackedByUnitsWithTags$",
    "translate": "canOnlyBeAttackedByUnitsWithTags",
    "section": "core",
    "description": "List of tag strings, only units with these tags can directly target this unit."
  },
  {
    "code": "^disableDeathOnZeroHp$",
    "translate": "disableDeathOnZeroHp",
    "section": "core",
    "description": "Setting to true allows unit to continue living even at 0 HP, useful for custom \"death\" action. Warning: If not used with an autoTrigger, etc units will attack this unit forever."
  },
  {
    "code": "^allowCaptureWhenNeutralByAI$",
    "translate": "allowCaptureWhenNeutralByAI",
    "section": "core",
    "description": "When true, it lets to be captured on contact by AI as well. Defaults as false"
  },
  {
    "code": "^transportSlotsNeeded$",
    "translate": "transportSlotsNeeded",
    "section": "core",
    "description": "Defaults to 1. Number of slots this unit uses up in a transport, experimentals are often set to 5."
  },
  {
    "code": "^maxTransportingUnits$",
    "translate": "maxTransportingUnits",
    "section": "core",
    "description": "Number of slots this units has for transporting other units."
  },
  {
    "code": "^transportUnitsRequireTag$",
    "translate": "transportUnitsRequireTag",
    "section": "core",
    "description": "Only allows trasport of units that have one of these tags."
  },
  {
    "code": "^transportUnitsRequireMovementType$",
    "translate": "transportUnitsRequireMovementType",
    "section": "core",
    "description": "Only allows trasport of units that have one of these movement types."
  },
  {
    "code": "^transportUnitsBlockAirAndWaterUnits$",
    "translate": "transportUnitsBlockAirAndWaterUnits",
    "section": "core",
    "description": "Defaults to true. This unit can only transport LAND units if true."
  },
  {
    "code": "^transportUnitsEachUnitAlwaysUsesSingleSlot$",
    "translate": "transportUnitsEachUnitAlwaysUsesSingleSlot",
    "section": "core",
    "description": "Defaults to false. Units in this transport occupy 1 slot always if true, ignoring transportSlotsNeeded."
  },
  {
    "code": "^transportUnitsKeepBuiltUnits$",
    "translate": "transportUnitsKeepBuiltUnits",
    "section": "core",
    "description": "Makes built units stay inside transport instead of exiting it once ready if true."
  },
  {
    "code": "^transportUnitsCanUnloadUnits$",
    "translate": "transportUnitsCanUnloadUnits",
    "section": "core",
    "description": "Defaults to: if not self.isOverLiquid() and not self.isMoving(). This unit cannot unload units if false."
  },
  {
    "code": "^transportUnitsAddUnloadOption$",
    "translate": "transportUnitsAddUnloadOption",
    "section": "core",
    "description": "Defines if unload button should be added to the unit menu"
  },
  {
    "code": "^transportUnitsUnloadDelayBetweenEachUnit$",
    "translate": "transportUnitsUnloadDelayBetweenEachUnit",
    "section": "core",
    "description": "Changes the delay it takes between each unit getting unloaded."
  },
  {
    "code": "^transportUnitsKillOnDeath$",
    "translate": "transportUnitsKillOnDeath",
    "section": "core",
    "description": "Defaults to true. If false transported units don't die when transport dies."
  },
  {
    "code": "^transportUnitsHealBy$",
    "translate": "transportUnitsHealBy",
    "section": "core",
    "description": "Rate to heal units that are being transported."
  },
  {
    "code": "^transportUnitsBlockOtherTransports$",
    "translate": "transportUnitsBlockOtherTransports",
    "section": "core",
    "description": "Defaults to true, if false this transports can hold other transports."
  },
  {
    "code": "^whileNeutralTransportAnyTeam$",
    "translate": "whileNeutralTransportAnyTeam",
    "section": "core",
    "description": "This unit can transport units of any team while neutral if true."
  },
  {
    "code": "^whileNeutralConvertToTransportedTeam$",
    "translate": "whileNeutralConvertToTransportedTeam",
    "section": "core",
    "description": "Converts this unit to transported team while neutral. Useful with whileNeutralTransportAnyTeam."
  },
  {
    "code": "^convertToNeutralIfNotTransporting$",
    "translate": "convertToNeutralIfNotTransporting",
    "section": "core",
    "description": "Reverts back this unit to neutral when unloaded. Useful with whileNeutralTransportAnyTeam."
  },
  {
    "code": "^transportUnitsOnTeamChangeKeepCurrentTeam$",
    "translate": "transportUnitsOnTeamChangeKeepCurrentTeam",
    "section": "core",
    "description": "Keeps transported units on their orginal team when this unit is converted if true."
  },
  {
    "code": "^resourceRate$",
    "translate": "resourceRate",
    "section": "core",
    "description": "Used with canReclaimResources. Allows other teams to reclaim this unit. Normally used with neutral team. Use price to set what resources are gained."
  },
  {
    "code": "^similarResourcesHaveTag$",
    "translate": "similarResourcesHaveTag",
    "section": "core",
    "description": "When this has been reclaimed harvester unit moves on to another resource with these tags."
  },
  {
    "code": "^resourceMaxConcurrentReclaimingThis$",
    "translate": "resourceMaxConcurrentReclaimingThis",
    "section": "core",
    "description": "Defaults to unlimited. Set to restict how many units can reclaim this resource at the same time."
  },
  {
    "code": "^reclaimPrice$",
    "translate": "reclaimPrice",
    "section": "core",
    "description": "Like price but for resources. Useful for buildable resources."
  },
  {
    "code": "^canReclaimResources$",
    "translate": "canReclaimResources",
    "section": "core",
    "description": "If true this unit can gather resources, useful with resourceRate."
  },
  {
    "code": "^canReclaimResourcesNextSearchRange$",
    "translate": "canReclaimResourcesNextSearchRange",
    "section": "core",
    "description": "Defines the resource search range of this unit when its main gathered resource runs out."
  },
  {
    "code": "^canReclaimResourcesOnlyWithTags$",
    "translate": "canReclaimResourcesOnlyWithTags",
    "section": "core",
    "description": "This unit is only allowed to gather resources with these tags."
  },
  {
    "code": "^canReclaimUnitsOnlyWithTags$",
    "translate": "canReclaimUnitsOnlyWithTags",
    "section": "core",
    "description": "This is for reclaiming units, not for resources. See canReclaimResourcesOnlyWithTags"
  },
  {
    "code": "^resourceReclaimMultiplier$",
    "translate": "resourceReclaimMultiplier",
    "section": "core",
    "description": "Multiplies the builder's reclaim speed. Different from the related key \"nanoUnbuildSpeed\""
  },
  {
    "code": "^canRepairUnitsOnlyWithTags$",
    "translate": "canRepairUnitsOnlyWithTags",
    "section": "core",
    "description": "Repairs units with the specified tags"
  },
  {
    "code": "^canRepairBuildings$",
    "translate": "canRepairBuildings",
    "section": "core",
    "description": "Can this can heal ally buildings (isBuilder:true is required)"
  },
  {
    "code": "^canRepairUnits$",
    "translate": "canRepairUnits",
    "section": "core",
    "description": "Can this can heal ally units. (isBuilder:true is required), canRepairBuildings required for buildings."
  },
  {
    "code": "^autoRepair$",
    "translate": "autoRepair",
    "section": "core",
    "description": "Automatically try and repair damaged units in nano range. (isBuilder:true is required)"
  },
  {
    "code": "^nanoRange$",
    "translate": "nanoRange",
    "section": "core",
    "description": "Defaults to 85. Defines the unit building/repair/reclaim range."
  },
  {
    "code": "^nanoRepairSpeed$",
    "translate": "nanoRepairSpeed",
    "section": "core",
    "description": "Defaults to 0.2. Defines the unit nano repair/reclaim speed."
  },
  {
    "code": "^nanoBuildSpeed$",
    "translate": "nanoBuildSpeed",
    "section": "core",
    "description": "Defaults to 1. Defines the unit nano building speed. (May multiply with target's buildSpeed)"
  },
  {
    "code": "^nanoUnbuildSpeed$",
    "translate": "nanoUnbuildSpeed",
    "section": "core",
    "description": "How fast a builder reclaims an incomplete building (defaults to 1)"
  },
  {
    "code": "^nanoReclaimSpeed$",
    "translate": "nanoReclaimSpeed",
    "section": "core",
    "description": "How fast a builder reclaims a normal unit (not a resource unit)"
  },
  {
    "code": "^nanoRangeForRepairIsMelee$",
    "translate": "nanoRangeForRepairIsMelee",
    "section": "core",
    "description": "Defines if this unit must touch its target to repair it."
  },
  {
    "code": "^nanoRangeForReclaimIsMelee$",
    "translate": "nanoRangeForReclaimIsMelee",
    "section": "core",
    "description": "Defines if this unit must touch its target to reclaim it."
  },
  {
    "code": "^nanoRangeForRepair$",
    "translate": "nanoRangeForRepair",
    "section": "core",
    "description": "Defines a specific range for the repair action of this unit."
  },
  {
    "code": "^nanoRangeForReclaim$",
    "translate": "nanoRangeForReclaim",
    "section": "core",
    "description": "Defines a specific range for the reclaim action of this unit."
  },
  {
    "code": "^nanoFactorySpeed$",
    "translate": "nanoFactorySpeed",
    "section": "core",
    "description": "Defaults to 1. Multiplies the buildSpeed value of the created unit if this unit is a factory."
  },
  {
    "code": "^extraBuildRangeWhenBuildingThis$",
    "translate": "extraBuildRangeWhenBuildingThis",
    "section": "core",
    "description": "Temporarily adds extra build range to builders to build this unit. Useful for water based buildings."
  },
  {
    "code": "^builtFrom_\\d+_name$",
    "translate": "builtFrom_{1}_name",
    "section": "core",
    "description": "Useful if adding this unit to build to existing buildings. Like canBuild but in opposite direction.",
    "rule": "builtFrom_(\\d+)_name"
  },
  {
    "code": "^builtFrom_\\d+_pos$",
    "translate": "builtFrom_{1}_pos",
    "section": "core",
    "description": "Order this build link appears in UI. Using canBuild instead is more recommended.",
    "rule": "builtFrom_(\\d+)_pos"
  },
  {
    "code": "^builtFrom_\\d+_forceNano$",
    "translate": "builtFrom_{1}_forceNano",
    "section": "core",
    "description": "Build as if this is a building if true. (even if it's a unit)",
    "rule": "builtFrom_(\\d+)_forceNano"
  },
  {
    "code": "^builtFrom_\\d+_isLocked$",
    "translate": "builtFrom_{1}_isLocked",
    "section": "core",
    "description": "If true this unit cannot be built in this build link. (can be conditioned if logicBooleans are used)",
    "rule": "builtFrom_(\\d+)_isLocked"
  },
  {
    "code": "^builtFrom_\\d+_isLockedMessage(_.+)?$",
    "translate": "builtFrom_{1}_isLockedMessage",
    "section": "core",
    "description": "Message shown when this build link is locked.",
    "rule": "builtFrom_(\\d+)_isLockedMessage"
  },
  {
    "code": "^exit_x$",
    "translate": "exit_x",
    "section": "core",
    "description": "Where created or unloaded units appears from the transport or building. Defaults to 0."
  },
  {
    "code": "^exit_y$",
    "translate": "exit_y",
    "section": "core",
    "description": "Where created or unloaded units appears from the transport or building. Defaults to 5."
  },
  {
    "code": "^exit_dirOffset$",
    "translate": "exit_dirOffset",
    "section": "core",
    "description": "Defaults to 180 for units and 0 for buildings. Defines the exit direction of created or unloaded units."
  },
  {
    "code": "^exit_heightOffset$",
    "translate": "exit_heightOffset",
    "section": "core",
    "description": "Defaults to 0. Defines the height where created or unloaded units appears."
  },
  {
    "code": "^exit_moveAwayAmount$",
    "translate": "exit_moveAwayAmount",
    "section": "core",
    "description": "Defaults to 70. Defines the distance that created or unloaded units moves from this unit."
  },
  {
    "code": "^exitHeightIgnoreParent$",
    "translate": "exitHeightIgnoreParent",
    "section": "core",
    "description": "Ignores parent height for exit height; useful for separating attachments with their parents for building"
  },
  {
    "code": "^dieOnConstruct$",
    "translate": "dieOnConstruct",
    "section": "core",
    "description": "Deletes this unit when it starts to build if true. (target building/unit likely will need selfBuildRate set)"
  },
  {
    "code": "^dieOnZeroEnergy$",
    "translate": "dieOnZeroEnergy",
    "section": "core",
    "description": "Kills this unit if energy level reaches zero when true."
  },
  {
    "code": "^numBitsOnDeath$",
    "translate": "numBitsOnDeath",
    "section": "core",
    "description": "Defines the number of scattered bit fragments when this unit dies."
  },
  {
    "code": "^nukeOnDeath$",
    "translate": "nukeOnDeath",
    "section": "core",
    "description": "Unit will spawn a nuke detonation built-in effect when dies if true."
  },
  {
    "code": "^nukeOnDeathRange$",
    "translate": "nukeOnDeathRange",
    "section": "core",
    "description": "Defines the nuke effect range when using nukeOnDeath."
  },
  {
    "code": "^nukeOnDeathDamage$",
    "translate": "nukeOnDeathDamage",
    "section": "core",
    "description": "Defines the nuke effect area damage when using nukeOnDeath."
  },
  {
    "code": "^nukeOnDeathDisableWhenNoNuke$",
    "translate": "nukeOnDeathDisableWhenNoNuke",
    "section": "core",
    "description": "Defaults to false. If true this unit will not explode with nuke when nukes are disabled in skirmish maps."
  },
  {
    "code": "^fireTurretXAtSelfOnDeath$",
    "translate": "fireTurretXAtSelfOnDeath",
    "section": "core",
    "description": "Auto-shoot a specific turret when this unit dies."
  },
  {
    "code": "^explodeOnDeath$",
    "translate": "explodeOnDeath",
    "section": "core",
    "description": "Defaults to true. Disables the unit death explode built-in effect if false."
  },
  {
    "code": "^explodeOnDeathGroundCollision$",
    "translate": "explodeOnDeathGroundCollision",
    "section": "core",
    "description": "Defaults to true. Disables the explode built-in effect on death when unit touches ground if false."
  },
  {
    "code": "^explodeTypeOnDeath$",
    "translate": "explodeTypeOnDeath",
    "section": "core",
    "description": "options: verysmall, small, normal, large, largeUnit, building, buildingNoShockwaveOrSmoke, verylargeBuilding"
  },
  {
    "code": "^effectOnDeath$",
    "translate": "effectOnDeath",
    "section": "core",
    "description": "Spawns built-in or custom effects when unit dies."
  },
  {
    "code": "^effectOnDeathGroundCollision$",
    "translate": "effectOnDeathGroundCollision",
    "section": "core",
    "description": "Like effectOnDeath but when unit touches ground. Useful for flying units."
  },
  {
    "code": "^unitsSpawnedOnDeath$",
    "translate": "unitsSpawnedOnDeath",
    "section": "core",
    "description": "Spawns these units when dies. Comma separated unit identifiers."
  },
  {
    "code": "^unitsSpawnedOnDeath_setToTeamOfLastAttacker$",
    "translate": "unitsSpawnedOnDeath_setToTeamOfLastAttacker",
    "section": "core",
    "description": "Units spawned on death will appear on the last attacker team if true."
  },
  {
    "code": "^hideScorchMark$",
    "translate": "hideScorchMark",
    "section": "core",
    "description": "Disables the death scorch mark leaved when unit dies if true."
  },
  {
    "code": "^soundOnDeath$",
    "translate": "soundOnDeath",
    "section": "core",
    "description": "Sets a custom sound for this unit death."
  },
  {
    "code": "^effectOnDeathIfUnbuilt$",
    "translate": "effectOnDeathIfUnbuilt",
    "section": "core",
    "description": "If the unit was not completed, and is destroyed, play this effect. Defaults to effectOnDeath"
  },
  {
    "code": "^autoTriggerCooldownTime$",
    "translate": "autoTriggerCooldownTime",
    "section": "core",
    "description": "Post automatic action cooldown (Not detection cooldown). Defaults to 1s. Warning: Setting this too low for many units might effect performance depending on the action effects."
  },
  {
    "code": "^autoTriggerCooldownTime_allowDangerousHighCPU$",
    "translate": "autoTriggerCooldownTime_allowDangerousHighCPU",
    "section": "core",
    "description": "Allows for auto action cooldown lower than 0.2s. Default to false. Not recommended."
  },
  {
    "code": "^autoTriggerCheckRate$",
    "translate": "autoTriggerCheckRate",
    "section": "core",
    "description": "options: everyFrame (default), every4Frames, every8Frames. Note: all triggers regardless of check rate are checked when first created and after an auto trigger cooldown. Note: Adding [core]autoTriggerCheckRate:every8Frames to all-units.template could have a large performance boost for mods with complex autoTriggers."
  },
  {
    "code": "^autoTriggerCheckWhileNotBuilt$",
    "translate": "autoTriggerCheckWhileNotBuilt",
    "section": "core",
    "description": "Defaults to false. autoTrigger of unit actions check even when not completely built if true"
  },
  {
    "code": "^updateUnitMemory$",
    "translate": "updateUnitMemory",
    "section": "core",
    "description": "Faster memory update than [action_#] setUnitMemory. Useful on many applications."
  },
  {
    "code": "^updateUnitMemoryRate$",
    "translate": "updateUnitMemoryRate",
    "section": "core",
    "description": "Sets how often the memory is updated. Defaults at 1s. settings it to 0 will update memory every frame."
  },
  {
    "code": "^@memory .+$",
    "translate": "@memory {1}",
    "section": "core",
    "description": "A template-friendly method of defineUnitMemory. Declare name followed by type, separated by a colon",
    "rule": "^@memory (.+)$"
  },
  {
    "code": "^action_\\d+_convertTo$",
    "translate": "action_{1}_convertTo",
    "section": "core",
    "description": "Deprecated in 1.13, use [action_x] sections instead.",
    "rule": "^action_(\\d+)_convertTo$"
  },
  {
    "code": "^action_\\d+_pos$",
    "translate": "action_{1}_pos",
    "section": "core",
    "description": "Order action appears in UI",
    "rule": "^action_(\\d+)_pos$"
  },
  {
    "code": "^action_\\d+_price$",
    "translate": "action_{1}_price",
    "section": "core",
    "description": "The price of your action for the unit. (All your sub actions will be linked to the # you use).",
    "rule": "^action_(\\d+)_price$"
  },
  {
    "code": "^action_\\d+_text$",
    "translate": "action_{1}_text",
    "section": "core",
    "description": "A display text when you select your unit's action, used to explain it's purpose.",
    "rule": "^action_(\\d+)_text$"
  },
  {
    "code": "^action_\\d+_description$",
    "translate": "action_{1}_description",
    "section": "core",
    "description": "The action description.",
    "rule": "^action_(\\d+)_description$"
  },
  {
    "code": "^action_\\d+_addEnergy$",
    "translate": "action_{1}_addEnergy",
    "section": "core",
    "description": "Adds energy to unit. Has no effect unless energyMax is set.",
    "rule": "^action_(\\d+)_addEnergy$"
  },
  {
    "code": "^action_\\d+_whenBuilding_cannotMove$",
    "translate": "action_{1}_whenBuilding_cannotMove",
    "section": "core",
    "description": "Stops unit moving while action is being applied. Useful for deploy like actions.",
    "rule": "^action_(\\d+)_whenBuilding_cannotMove$"
  },
  {
    "code": "^canBuild_\\d+_name$",
    "translate": "canBuild_{1}_name",
    "section": "core",
    "description": "canBuild_x_name",
    "rule": "^canBuild_(\\d+)_name$"
  },
  {
    "code": "^canBuild_\\d+_pos$",
    "translate": "canBuild_{1}_pos",
    "section": "core",
    "description": "canBuild_x_pos",
    "rule": "^canBuild_(\\d+)_pos$"
  },
  {
    "code": "^canBuild_\\d+_isLocked$",
    "translate": "canBuild_{1}_isLocked",
    "section": "core",
    "description": "canBuild_x_isLocked",
    "rule": "^canBuild_(\\d+)_isLocked"
  },
  {
    "code": "^name$",
    "translate": "name",
    "section": "canBuild",
    "description": "List of unit identifiers this unit can create. Can be buildings or units. Add \"setRally\" to create a rally button.Add \"reclaim\" to create a reclaim button."
  },
  {
    "code": "^pos$",
    "translate": "pos",
    "section": "canBuild",
    "description": "Order build link appears in this unit UI."
  },
  {
    "code": "^tech$",
    "translate": "tech",
    "section": "canBuild",
    "description": "Tech level. Mostly just affects build link colour in this unit UI. Defaults to 1."
  },
  {
    "code": "^forceNano$",
    "translate": "forceNano",
    "section": "canBuild",
    "description": "Builds target as if it was a building if true. (even if it's a unit)"
  },
  {
    "code": "^isVisible$",
    "translate": "isVisible",
    "section": "canBuild",
    "description": "Hide this build link if true in this unit UI."
  },
  {
    "code": "^isLocked$",
    "translate": "isLocked",
    "section": "canBuild",
    "description": "Disallow building of this unit. Can be used with overrideAndReplace to restrict units player can build."
  },
  {
    "code": "^isLockedAlt$",
    "translate": "isLockedAlt",
    "section": "canBuild",
    "description": "Another reason for this to be locked. Just allows a different message to be shown."
  },
  {
    "code": "^isLockedAltMessage$",
    "translate": "isLockedAltMessage",
    "section": "canBuild",
    "description": "Message for isLockedAlt."
  },
  {
    "code": "^isLockedAlt2$",
    "translate": "isLockedAlt2",
    "section": "canBuild",
    "description": "Like isLockedAlt but to show one more message."
  },
  {
    "code": "^isLockedAlt2Message$",
    "translate": "isLockedAlt2Message",
    "section": "canBuild",
    "description": "Message for isLockedAlt2."
  },
  {
    "code": "^addResources$",
    "translate": "addResources",
    "section": "canBuild",
    "description": "Adds these resources to self when placing the building or producing the unit."
  },
  {
    "code": "^price$",
    "translate": "price",
    "section": "canBuild",
    "description": "The unit cost from builders/buildings. Defaults to credits if no resource type is used"
  },
  {
    "code": "^isGuiBlinking$",
    "translate": "isGuiBlinking",
    "section": "canBuild",
    "description": "Generates a blinking effect in UI if true."
  },
  {
    "code": "^image$",
    "translate": "image",
    "section": "graphics",
    "description": "File path to png image."
  },
  {
    "code": "^teamColoringMode$",
    "translate": "teamColoringMode",
    "section": "graphics",
    "description": "How pixels are used for team coloring, options: pureGreen, hueAdd, hueShift, disabled"
  },
  {
    "code": "^image_back$",
    "translate": "image_back",
    "section": "graphics",
    "description": "An optional image drawn behind other units. Useful for factories that units exit"
  },
  {
    "code": "^image_shield$",
    "translate": "image_shield",
    "section": "graphics",
    "description": "Image to show as a custom shield"
  },
  {
    "code": "^image_wreak$",
    "translate": "image_wreak",
    "section": "graphics",
    "description": "Image to use when unit dies. Can be NONE to leave no wreak"
  },
  {
    "code": "^image_offsetX$",
    "translate": "image_offsetX",
    "section": "graphics",
    "description": "Use this to adjust the graphics of a unit if it is too far off one side"
  },
  {
    "code": "^image_offsetY$",
    "translate": "image_offsetY",
    "section": "graphics",
    "description": "Use this to adjust the graphics of a unit if it is too far off one side"
  },
  {
    "code": "^image_offsetH$",
    "translate": "image_offsetH",
    "section": "graphics",
    "description": "Use this to adjust the height of the graphic, especially when using decals"
  },
  {
    "code": "^image_floatingPointSize$",
    "translate": "image_floatingPointSize",
    "section": "graphics",
    "description": "Fixes of by 1 pixel sizing for images with widths and/or height that has odd value"
  },
  {
    "code": "^isVisible$",
    "translate": "isVisible",
    "section": "graphics",
    "description": "Hide this build link if true in this unit UI."
  },
  {
    "code": "^isVisibleToEnemies$",
    "translate": "isVisibleToEnemies",
    "section": "graphics",
    "description": "Only visible to player and allies when false. Recommend with showOnMinimapToEnemies. Useful for stealth units."
  },
  {
    "code": "^scaleImagesTo$",
    "translate": "scaleImagesTo",
    "section": "graphics",
    "description": "Resize image to fit this value in pixels.  Effects leg, and shadow images as well."
  },
  {
    "code": "^imageScale$",
    "translate": "imageScale",
    "section": "graphics",
    "description": "Resize image. Defaults to 1. Effects leg, and shadow images as well."
  },
  {
    "code": "^drawLayer$",
    "translate": "drawLayer",
    "section": "graphics",
    "description": "Land units normally default to ground or ground2 if transport. Options: wreaks, underwater, bottom, ground, ground2, experimentals, air, top"
  },
  {
    "code": "^whenBeingBuiltMakeTransparentTill$",
    "translate": "whenBeingBuiltMakeTransparentTill",
    "section": "graphics",
    "description": "How long the transparent effect is applied to incomplete units, set to 0 to disable completely. Default: 1"
  },
  {
    "code": "^icon_zoomed_out$",
    "translate": "icon_zoomed_out",
    "section": "graphics",
    "description": "Sets the custom image of the unit icon on the zoomed out battle map"
  },
  {
    "code": "^icon_zoomed_out_neverShow$",
    "translate": "icon_zoomed_out_neverShow",
    "section": "graphics",
    "description": "Sets wheather show the unit icon or not on the zoomed out battle map"
  },
  {
    "code": "^icon_build$",
    "translate": "icon_build",
    "section": "graphics",
    "description": "Displays icon of the unit on Build Panel"
  },
  {
    "code": "^image_turret$",
    "translate": "image_turret",
    "section": "graphics",
    "description": "Default image for all turrets, can also be set per turret"
  },
  {
    "code": "^teamColorsOnTurret$",
    "translate": "teamColorsOnTurret",
    "section": "graphics",
    "description": "Defaults false. Apply team colours on turret as well. Also effects pre-turret images"
  },
  {
    "code": "^scaleTurretImagesTo$",
    "translate": "scaleTurretImagesTo",
    "section": "graphics",
    "description": "Will cause crash if image_turret is not specified, even if image is set per turret"
  },
  {
    "code": "^lock_body_rotation_with_main_turret$",
    "translate": "lock_body_rotation_with_main_turret",
    "section": "graphics",
    "description": "Locks body image locked to the direction of the turret named \"1\" (turret_1) or the first turret defined (if a turret_1 is not defined)"
  },
  {
    "code": "^lock_leg_rotation_with_main_turret$",
    "translate": "lock_leg_rotation_with_main_turret",
    "section": "graphics",
    "description": "Locks legs and arms to the direction of the turret named \"1\" (turret_1) or the first turret defined (if a turret_1 is not defined)"
  },
  {
    "code": "^image_shadow$",
    "translate": "image_shadow",
    "section": "graphics",
    "description": "Image file, NONE, AUTO or AUTO_ANIMATED. (AUTO  will use image and make it transparent black only.)"
  },
  {
    "code": "^shadowOffsetX$",
    "translate": "shadowOffsetX",
    "section": "graphics",
    "description": "Adjusts shadow horizontally"
  },
  {
    "code": "^shadowOffsetY$",
    "translate": "shadowOffsetY",
    "section": "graphics",
    "description": "Adjusts shadow vertically"
  },
  {
    "code": "^image_shadow_frames$",
    "translate": "image_shadow_frames",
    "section": "graphics",
    "description": "If shadow image should use frame animation of main image. .Alternative to AUTO_ANIMATED shadow value."
  },
  {
    "code": "^lock_shadow_rotation_with_main_turret$",
    "translate": "lock_shadow_rotation_with_main_turret",
    "section": "graphics",
    "description": "Locks body image shadow locked to first turret's direction"
  },
  {
    "code": "^total_frames$",
    "translate": "total_frames",
    "section": "graphics",
    "description": "Defaults to 1. Animations require this."
  },
  {
    "code": "^frame_width$",
    "translate": "frame_width",
    "section": "graphics",
    "description": "Calculated for you if total frames is set, but can be overridden"
  },
  {
    "code": "^frame_height$",
    "translate": "frame_height",
    "section": "graphics",
    "description": "Defaults to image height"
  },
  {
    "code": "^default_frame$",
    "translate": "default_frame",
    "section": "graphics",
    "description": "Default frame when not playing an animation. First frame is 0"
  },
  {
    "code": "^splastEffect$",
    "translate": "splastEffect",
    "section": "graphics",
    "description": "True to create a water wave effect when over water. Default false"
  },
  {
    "code": "^dustEffect$",
    "translate": "dustEffect",
    "section": "graphics",
    "description": "True to create a dust effect when over land. Default false"
  },
  {
    "code": "^splastEffectReverse$",
    "translate": "splastEffectReverse",
    "section": "graphics",
    "description": "True to also create effect when unit is reversing"
  },
  {
    "code": "^dustEffectReverse$",
    "translate": "dustEffectReverse",
    "section": "graphics",
    "description": "True to also create effect when unit is reversing"
  },
  {
    "code": "^movementEffect$",
    "translate": "movementEffect",
    "section": "graphics",
    "description": "Custom movement effect, can be anything"
  },
  {
    "code": "^movementEffectReverse$",
    "translate": "movementEffectReverse",
    "section": "graphics",
    "description": "Reversed version of movementEffect: key"
  },
  {
    "code": "^movementEffectRate$",
    "translate": "movementEffectRate",
    "section": "graphics",
    "description": "Sets the frequency of effects being spawned while moving"
  },
  {
    "code": "^movementEffectReverseFlipEffects$",
    "translate": "movementEffectReverseFlipEffects",
    "section": "graphics",
    "description": "Create effect as if unit has rotated 180 when reversing"
  },
  {
    "code": "^repairEffect$",
    "translate": "repairEffect",
    "section": "graphics",
    "description": "Custom repair effect, can be anything. Replaces default effect from builders"
  },
  {
    "code": "^repairEffectAtTarget$",
    "translate": "repairEffectAtTarget",
    "section": "graphics",
    "description": "Custom repair effect towards the repaired target"
  },
  {
    "code": "^repairEffectRate$",
    "translate": "repairEffectRate",
    "section": "graphics",
    "description": "Sets the frequency of effects being spawned while repairing. Defaults to 5, affects both sides."
  },
  {
    "code": "^reclaimEffect$",
    "translate": "reclaimEffect",
    "section": "graphics",
    "description": "Custom reclaim effect, can be anything. Replaces default effect from builders"
  },
  {
    "code": "^reclaimEffectAtTarget$",
    "translate": "reclaimEffectAtTarget",
    "section": "graphics",
    "description": "Custom reclaim effect towards the reclaimed target"
  },
  {
    "code": "^reclaimEffectRate$",
    "translate": "reclaimEffectRate",
    "section": "graphics",
    "description": "Sets the frequency of effects being spawned while reclaiming. Defaults to 5, affects both sides."
  },
  {
    "code": "^rotate_with_direction$",
    "translate": "rotate_with_direction",
    "section": "graphics",
    "description": "Defaults to true. Makes unit body image locked to 0 degrees when false. Often used with animation_direction_*"
  },
  {
    "code": "^animation_direction_units$",
    "translate": "animation_direction_units",
    "section": "graphics",
    "description": "45 for 8 directions, 90 for 4 direction animation. Used with rotate_with_direction:false"
  },
  {
    "code": "^animation_direction_strideX$",
    "translate": "animation_direction_strideX",
    "section": "graphics",
    "description": "Animation frames to offset on direction change."
  },
  {
    "code": "^animation_direction_strideY$",
    "translate": "animation_direction_strideY",
    "section": "graphics",
    "description": "Animation frames to offset on direction change. Used with frame_height."
  },
  {
    "code": "^animation_direction_starting$",
    "translate": "animation_direction_starting",
    "section": "graphics",
    "description": "Direction for first frame"
  },
  {
    "code": "^disableLowHpFire$",
    "translate": "disableLowHpFire",
    "section": "graphics",
    "description": "Defaults to false. When true, removes the flames on severely damaged unit/structure."
  },
  {
    "code": "^disableLowHpSmoke$",
    "translate": "disableLowHpSmoke",
    "section": "graphics",
    "description": "Defaults to false. When true, removes the smokes on severely damaged unit/structure."
  },
  {
    "code": "^showTransportBar$",
    "translate": "showTransportBar",
    "section": "graphics",
    "description": "Defaults to true. Shows the transport bar for transport units."
  },
  {
    "code": "^showHealthBar$",
    "translate": "showHealthBar",
    "section": "graphics",
    "description": "Defaults to true. Shows the health bar of a unit. (Still hidden even if true when \"Always show unit health\" setting is disabled.)"
  },
  {
    "code": "^showEnergyBar$",
    "translate": "showEnergyBar",
    "section": "graphics",
    "description": "Defaults to true. Shows the energy bar of a unit."
  },
  {
    "code": "^showShieldBar$",
    "translate": "showShieldBar",
    "section": "graphics",
    "description": "Defaults to true. Shows the shield bar of a unit. Also affects the presence of set custom shield sprite."
  },
  {
    "code": "^showQueueBar$",
    "translate": "showQueueBar",
    "section": "graphics",
    "description": "Defaults to true. Shows the bar for build or action queue of a unit."
  },
  {
    "code": "^showShotDelayBar$",
    "translate": "showShotDelayBar",
    "section": "graphics",
    "description": "Defaults to true. Shows the shot delay/warmup of a unit before firing."
  },
  {
    "code": "^showSelectionIndicator$",
    "translate": "showSelectionIndicator",
    "section": "graphics",
    "description": "Defaults to true. Shows select circle/box if true"
  },
  {
    "code": "^teamColorsUseHue$",
    "translate": "teamColorsUseHue",
    "section": "graphics",
    "description": "False: Green pixels on unit gets converted to team color. True: Whole unit is tinted the team colour. Defaults to false"
  },
  {
    "code": "^animation_.+_start$",
    "translate": "animation_{1}_start",
    "section": "graphics",
    "description": "TYPE can be set to: attack, moving, idle. Use [animation] section instead for more control",
    "rule": "^animation_(.+)_start$"
  },
  {
    "code": "^animation_.+_end$",
    "translate": "animation_{1}_end",
    "section": "graphics",
    "description": "End frame, must be larger then start",
    "rule": "^animation_(.+)_end$"
  },
  {
    "code": "^animation_.+_scale_start$",
    "translate": "animation_{1}_scale_start",
    "section": "graphics",
    "description": "Scale unit image. Defaults to 1. Useful for bio units or breathing effects.",
    "rule": "^animation_(.+)_scale_start$"
  },
  {
    "code": "^animation_.+_scale_end$",
    "translate": "animation_{1}_scale_end",
    "section": "graphics",
    "description": "Scale unit image. Defaults to 1. Useful for bio units or breathing effects.",
    "rule": "^animation_(.+)_scale_end$"
  },
  {
    "code": "^animation_.+_speed$",
    "translate": "animation_{1}_speed",
    "section": "graphics",
    "description": "Delay for each frame of animation. Larger values cause slower animation",
    "rule": "^animation_(.+)_speed$"
  },
  {
    "code": "^animation_.+_pingPong$",
    "translate": "animation_{1}_pingPong",
    "section": "graphics",
    "description": "Play animation in reverse before repeating. Useful with scale_start/scale_end",
    "rule": "^animation_(.+)_pingPong$"
  },
  {
    "code": "^canAttack$",
    "translate": "canAttack",
    "section": "attack",
    "description": "If set to false, can not attack any unit. Overrides other canAttack options altogether."
  },
  {
    "code": "^canAttackFlyingUnits$",
    "translate": "canAttackFlyingUnits",
    "section": "attack",
    "description": "can also be narrowed per turret. Note: not required if canAttack is false."
  },
  {
    "code": "^canAttackLandUnits$",
    "translate": "canAttackLandUnits",
    "section": "attack",
    "description": "can also be narrowed per turret in [turret_NAME]"
  },
  {
    "code": "^canAttackUnderwaterUnits$",
    "translate": "canAttackUnderwaterUnits",
    "section": "attack",
    "description": "can also be narrowed per turret in [turret_NAME]"
  },
  {
    "code": "^maxAttackRange$",
    "translate": "maxAttackRange",
    "section": "attack",
    "description": "(multiplied by globalScale)"
  },
  {
    "code": "^shootDelay$",
    "translate": "shootDelay",
    "section": "attack",
    "description": "Global delay, can also use delay on each turret. Set in seconds or ticks"
  },
  {
    "code": "^canAttackNotTouchingWaterUnits$",
    "translate": "canAttackNotTouchingWaterUnits",
    "section": "attack",
    "description": "Default true. If false unit can only attack units in contact with the water. Used for units with torpedos. (can also be set per turret)"
  },
  {
    "code": "^canOnlyAttackUnitsWithTags$",
    "translate": "canOnlyAttackUnitsWithTags",
    "section": "attack",
    "description": "Will only attack units that has the specified tags."
  },
  {
    "code": "^canOnlyAttackUnitsWithoutTags$",
    "translate": "canOnlyAttackUnitsWithoutTags",
    "section": "attack",
    "description": "Can only attack units without the specified tags."
  },
  {
    "code": "^turretMultiTargeting$",
    "translate": "turretMultiTargeting",
    "section": "attack",
    "description": "Allow each turrets to fire at a different target at the same time. Very useful if [turret]limitingAngle is used"
  },
  {
    "code": "^isMelee$",
    "translate": "isMelee",
    "section": "attack",
    "description": "Used with a low attack range (like maxAttackRange: 9) makes src and target radius get added to range, and effects AI."
  },
  {
    "code": "^meleeEngangementDistance$",
    "translate": "meleeEngangementDistance",
    "section": "attack",
    "description": "Makes unit move to attack nearby units. Defaults to 250 for melee, and 0 for non melee (Works even if non-melee, but might be unexpected to players)"
  },
  {
    "code": "^turretRotateWithBody$",
    "translate": "turretRotateWithBody",
    "section": "attack",
    "description": "Are all turrets rotated when body rotates. Defaults to true"
  },
  {
    "code": "^attackMovement$",
    "translate": "attackMovement",
    "section": "attack",
    "description": "normal/bomber. bomber attack movement will retreat when energy runs out"
  },
  {
    "code": "^dieOnAttack$",
    "translate": "dieOnAttack",
    "section": "attack",
    "description": "Will die when it attacks."
  },
  {
    "code": "^isFixedFiring$",
    "translate": "isFixedFiring",
    "section": "attack",
    "description": "Must aim body at target to shoot. Will often make the unit need to stop before it can aim and shoot."
  },
  {
    "code": "^aimOffsetSpread$",
    "translate": "aimOffsetSpread",
    "section": "attack",
    "description": "Offset each shot multiplied by target radius. Defaults to 0.6. aimOffsetSpread:0 will make unit always attack center"
  },
  {
    "code": "^stopTargetingAfterFiring$",
    "translate": "stopTargetingAfterFiring",
    "section": "attack",
    "description": "Unit stops targeting after firing a shot. Rarely used or needed."
  },
  {
    "code": "^disablePassiveTargeting$",
    "translate": "disablePassiveTargeting",
    "section": "attack",
    "description": "Unit only attacks manually ordered target. Rarely used or needed."
  },
  {
    "code": "^showRangeUIGuide$",
    "translate": "showRangeUIGuide",
    "section": "attack",
    "description": "Will it show the range indicator. Useful for showing ranges in radar and related structures."
  },
  {
    "code": "^shootDelayMultiplier$",
    "translate": "shootDelayMultiplier",
    "section": "attack",
    "description": "Defaults to 1. Can be dynamically changed with setUnitStats"
  },
  {
    "code": "^shootDamageMultiplier$",
    "translate": "shootDamageMultiplier",
    "section": "attack",
    "description": "Defaults to 1. Can be dynamically changed with setUnitStats"
  },
  {
    "code": "^turretSize$",
    "translate": "turretSize",
    "section": "attack",
    "description": "(multiplied by globalScale)"
  },
  {
    "code": "^turretTurnSpeed$",
    "translate": "turretTurnSpeed",
    "section": "attack",
    "description": ""
  },
  {
    "code": "^x$",
    "translate": "x",
    "section": "turret",
    "description": "Sets the horizontal position of the turret. 0 is center, negatives toward left, positives toward right."
  },
  {
    "code": "^y$",
    "translate": "y",
    "section": "turret",
    "description": "Sets the vertical position of the turret.  0 is center, negatives toward bottom, positives toward top."
  },
  {
    "code": "^copyFrom$",
    "translate": "copyFrom",
    "section": "turret",
    "description": "Uses unit data from another ini file as default for this unit, supports multiple files."
  },
  {
    "code": "^projectile$",
    "translate": "projectile",
    "section": "turret",
    "description": "Projectile fired from this turret."
  },
  {
    "code": "^altProjectile$",
    "translate": "altProjectile",
    "section": "turret",
    "description": "Alternative projectile fired from this turret when altProjectileCondition is true"
  },
  {
    "code": "^altProjectileCondition$",
    "translate": "altProjectileCondition",
    "section": "turret",
    "description": "Used with altProjectile"
  },
  {
    "code": "^barrelX$",
    "translate": "barrelX",
    "section": "turret",
    "description": "Defaults to 0. Controls horizontal position for projectile spawn."
  },
  {
    "code": "^barrelY$",
    "translate": "barrelY",
    "section": "turret",
    "description": "Defaults to size. Note: size and barrelY have the same meaning"
  },
  {
    "code": "^barrelHeight$",
    "translate": "barrelHeight",
    "section": "turret",
    "description": "Height of barrel in 3d. Effect projectile and shoot flame starting height"
  },
  {
    "code": "^height$",
    "translate": "height",
    "section": "turret",
    "description": "Height of the unit in 3D, to be used with decals"
  },
  {
    "code": "^size$",
    "translate": "size",
    "section": "turret",
    "description": "Controls the distance between the center of the turret and the point from where projectiles spawn."
  },
  {
    "code": "^turnSpeed$",
    "translate": "turnSpeed",
    "section": "turret",
    "description": "Max turn speed of the turret"
  },
  {
    "code": "^turnSpeedAcceleration$",
    "translate": "turnSpeedAcceleration",
    "section": "turret",
    "description": "Defaults to disabled, and full turn speed is used."
  },
  {
    "code": "^turnSpeedDeceleration$",
    "translate": "turnSpeedDeceleration",
    "section": "turret",
    "description": "Defaults to turnSpeedAcceleration. Setting this higher than turn acceleration might allow faster targets to be hit"
  },
  {
    "code": "^idleDir$",
    "translate": "idleDir",
    "section": "turret",
    "description": "Defaults to 0"
  },
  {
    "code": "^idleDirReversing$",
    "translate": "idleDirReversing",
    "section": "turret",
    "description": "Defaults to idleDir+180 unless attached to another turret (as attached turret will often be rotating when reversing)"
  },
  {
    "code": "^shouldResetTurret$",
    "translate": "shouldResetTurret",
    "section": "turret",
    "description": "Defaults true. False to disable the reseting turret angle when idle"
  },
  {
    "code": "^idleSpin$",
    "translate": "idleSpin",
    "section": "turret",
    "description": "Spin rate when idle, used on missile turrets"
  },
  {
    "code": "^idleSweepAngle$",
    "translate": "idleSweepAngle",
    "section": "turret",
    "description": "Disabled by default. Controls how far the turret will \"look\" left and right"
  },
  {
    "code": "^idleSweepDelay$",
    "translate": "idleSweepDelay",
    "section": "turret",
    "description": "Controls the delay between idleSweep movements"
  },
  {
    "code": "^idleSweepSpeed$",
    "translate": "idleSweepSpeed",
    "section": "turret",
    "description": "Controls the speed with which the turret sweeps when idle"
  },
  {
    "code": "^idleSweepCondition$",
    "translate": "idleSweepCondition",
    "section": "turret",
    "description": "Disable idle sweep if false"
  },
  {
    "code": "^idleSweepAddRandomDelay$",
    "translate": "idleSweepAddRandomDelay",
    "section": "turret",
    "description": "Default 1-20 depends on idleSweepDelay, used to stop sweep syncing up with other units"
  },
  {
    "code": "^idleSweepAddRandomAngle$",
    "translate": "idleSweepAddRandomAngle",
    "section": "turret",
    "description": "Default 0"
  },
  {
    "code": "^attachedTo$",
    "translate": "attachedTo",
    "section": "turret",
    "description": "A specific turret to connect to, it will rotate with it. No correlation to [attachment_x]"
  },
  {
    "code": "^slave$",
    "translate": "slave",
    "section": "turret",
    "description": "Locks this turret's direction and shot cooldown to attached turret. Often used with warmup for multiple barrel guns"
  },
  {
    "code": "^isMainNanoTurret$",
    "translate": "isMainNanoTurret",
    "section": "turret",
    "description": "Defaults to false. Turret to use for creating buildings, etc. should only be true on one turret, and should have canShoot set to false"
  },
  {
    "code": "^energyUsage$",
    "translate": "energyUsage",
    "section": "turret",
    "description": "Required energy to fire weapon. Same as resourceUsage: energy=X"
  },
  {
    "code": "^resourceUsage$",
    "translate": "resourceUsage",
    "section": "turret",
    "description": "can be in credits/energy/hp/shield/ammo. Stops firing if not met"
  },
  {
    "code": "^delay$",
    "translate": "delay",
    "section": "turret",
    "description": "Override global shootDelay for this turret"
  },
  {
    "code": "^linkDelayWithTurret$",
    "translate": "linkDelayWithTurret",
    "section": "turret",
    "description": "When this other turret fires the cooldown delay on this turret will be reset/removed"
  },
  {
    "code": "^warmup$",
    "translate": "warmup",
    "section": "turret",
    "description": "Delay before firing a shot."
  },
  {
    "code": "^warmupCallDownRate$",
    "translate": "warmupCallDownRate",
    "section": "turret",
    "description": "Rate to reduce warmup when turret is not ready to fire at any targets"
  },
  {
    "code": "^warmupNoReset$",
    "translate": "warmupNoReset",
    "section": "turret",
    "description": "Defaults to false. When true warmup is not reset after firing a shot and turret doesn't wait for warnup. Used with warmupCallDownRate and warmupShootDelayTransfer."
  },
  {
    "code": "^warmupShootDelayTransfer$",
    "translate": "warmupShootDelayTransfer",
    "section": "turret",
    "description": "Defaults to 0, amount to reduces the next shot delay depending on warmup. When used with warmupNoReset, can make a each shot faster."
  },
  {
    "code": "^onShoot_freezeBodyMovementFor$",
    "translate": "onShoot_freezeBodyMovementFor",
    "section": "turret",
    "description": "Freezes body movement while shooting."
  },
  {
    "code": "^barrelOffsetX_onOddShots$",
    "translate": "barrelOffsetX_onOddShots",
    "section": "turret",
    "description": "0 by default. Sets a barrelX offset only during odd numbered shots, useful for twin-barreled units. Use with barrelX. Use the opposite value of barrelX for most cases."
  },
  {
    "code": "^aimOffsetSpread$",
    "translate": "aimOffsetSpread",
    "section": "turret",
    "description": "Offset each shot multiplied by target radius. Defaults to 0.6. aimOffsetSpread:0 will make unit always attack center"
  },
  {
    "code": "^canShoot$",
    "translate": "canShoot",
    "section": "turret",
    "description": "Defaults to true"
  },
  {
    "code": "^canAttackFlyingUnits$",
    "translate": "canAttackFlyingUnits",
    "section": "turret",
    "description": "can also be narrowed per turret. Note: not required if canAttack is false."
  },
  {
    "code": "^canAttackLandUnits$",
    "translate": "canAttackLandUnits",
    "section": "turret",
    "description": "can also be narrowed per turret in [turret_NAME]"
  },
  {
    "code": "^canAttackUnderwaterUnits$",
    "translate": "canAttackUnderwaterUnits",
    "section": "turret",
    "description": "can also be narrowed per turret in [turret_NAME]"
  },
  {
    "code": "^canAttackNotTouchingWaterUnits$",
    "translate": "canAttackNotTouchingWaterUnits",
    "section": "turret",
    "description": "Default true. If false unit can only attack units in contact with the water. Used for units with torpedos. (can also be set per turret)"
  },
  {
    "code": "^canOnlyAttackUnitsWithTags$",
    "translate": "canOnlyAttackUnitsWithTags",
    "section": "turret",
    "description": "Will only attack units that has the specified tags."
  },
  {
    "code": "^canOnlyAttackUnitsWithoutTags$",
    "translate": "canOnlyAttackUnitsWithoutTags",
    "section": "turret",
    "description": "Can only attack units without the specified tags."
  },
  {
    "code": "^canAttackCondition$",
    "translate": "canAttackCondition",
    "section": "turret",
    "description": "Normally, used to optionally disable a turret based on a LogicBoolean. Eg: this unit's height"
  },
  {
    "code": "^canAttackMaxAngle$",
    "translate": "canAttackMaxAngle",
    "section": "turret",
    "description": "Max angle to target for turret to be allowed for fire. Defaults to 5, don't set lower. Can be set to 181 for turrets that don't need to turn to fire missiles."
  },
  {
    "code": "^clearTurretTargetAfterFiring$",
    "translate": "clearTurretTargetAfterFiring",
    "section": "turret",
    "description": "Clears the turrets sub-target when using multi-targeting"
  },
  {
    "code": "^limitingRange$",
    "translate": "limitingRange",
    "section": "turret",
    "description": "Make this turret have less range than the maxAttackRange. Do not apply this to all turrets change maxAttackRange instead."
  },
  {
    "code": "^limitingAngle$",
    "translate": "limitingAngle",
    "section": "turret",
    "description": "Linked with idleDir. Turret will only be able to fire at units +/- this angle."
  },
  {
    "code": "^limitingMinRange$",
    "translate": "limitingMinRange",
    "section": "turret",
    "description": "Sets minimum range for turret."
  },
  {
    "code": "^interceptProjectiles_withTags$",
    "translate": "interceptProjectiles_withTags",
    "section": "turret",
    "description": "Currently used with anti-nuke units."
  },
  {
    "code": "^interceptProjectiles_andTargetingGroundUnderDistance$",
    "translate": "interceptProjectiles_andTargetingGroundUnderDistance",
    "section": "turret",
    "description": "Minimum distance required for intercepting projectile"
  },
  {
    "code": "^interceptProjectiles_andUnderDistance$",
    "translate": "interceptProjectiles_andUnderDistance",
    "section": "turret",
    "description": "Defaults to 2000, distance inflight before firing"
  },
  {
    "code": "^interceptProjectiles_andOverHeight$",
    "translate": "interceptProjectiles_andOverHeight",
    "section": "turret",
    "description": "Defaults to 0. Sets the projectile target height limit"
  },
  {
    "code": "^laserDefenceEnergyUse$",
    "translate": "laserDefenceEnergyUse",
    "section": "turret",
    "description": "Set to enable a projectile laser defence from this turret. Should also set the energyMax in core."
  },
  {
    "code": "^invisible$",
    "translate": "invisible",
    "section": "turret",
    "description": "Don't render this turret, but still can shoot, etc."
  },
  {
    "code": "^image$",
    "translate": "image",
    "section": "turret",
    "description": "File path to png image."
  },
  {
    "code": "^image_applyTeamColors$",
    "translate": "image_applyTeamColors",
    "section": "turret",
    "description": "When true, the specific turret applies team colors over the special greens in the sprite."
  },
  {
    "code": "^image_drawOffsetX$",
    "translate": "image_drawOffsetX",
    "section": "turret",
    "description": "Moves the image horizontally from the turret center."
  },
  {
    "code": "^image_drawOffsetY$",
    "translate": "image_drawOffsetY",
    "section": "turret",
    "description": "Moves the image verticallly from the turret center."
  },
  {
    "code": "^chargeEffectImage$",
    "translate": "chargeEffectImage",
    "section": "turret",
    "description": "Used with warmup. Shows a scaling effect image on turret barrel when charging."
  },
  {
    "code": "^warmupStartEffect$",
    "translate": "warmupStartEffect",
    "section": "turret",
    "description": "Spawns specified effects when the specific turret is charging/warming up"
  },
  {
    "code": "^shoot_sound$",
    "translate": "shoot_sound",
    "section": "turret",
    "description": "Can be linked to an .ogg or .wav file, or one of the default game sounds (list at bottom of reference)"
  },
  {
    "code": "^shoot_sound_vol$",
    "translate": "shoot_sound_vol",
    "section": "turret",
    "description": "Sets the volume of the shoot sound"
  },
  {
    "code": "^shoot_flame$",
    "translate": "shoot_flame",
    "section": "turret",
    "description": "shoot flame."
  },
  {
    "code": "^shoot_light$",
    "translate": "shoot_light",
    "section": "turret",
    "description": "Produces a colored light upon shooting"
  },
  {
    "code": "^onShoot_playAnimation$",
    "translate": "onShoot_playAnimation",
    "section": "turret",
    "description": "Play a custom animation from an [animation] section after firing this turret"
  },
  {
    "code": "^onShoot_triggerActions$",
    "translate": "onShoot_triggerActions",
    "section": "turret",
    "description": "Trigger these actions each time this turret fires"
  },
  {
    "code": "^unloadUpToXUnitsAndGiveAttackOrder$",
    "translate": "unloadUpToXUnitsAndGiveAttackOrder",
    "section": "turret",
    "description": "Unloads X units at turret barrel locations and gives them the attack order of turret target"
  },
  {
    "code": "^recoilOffset$",
    "translate": "recoilOffset",
    "section": "turret",
    "description": "Push turret forward or back after firing for a recoil effect. Value in pixels."
  },
  {
    "code": "^recoilOutTime$",
    "translate": "recoilOutTime",
    "section": "turret",
    "description": "Time to get to offset position after firing"
  },
  {
    "code": "^recoilReturnTime$",
    "translate": "recoilReturnTime",
    "section": "turret",
    "description": "Time to return to default position"
  },
  {
    "code": "^showRangeUIGuide$",
    "translate": "showRangeUIGuide",
    "section": "turret",
    "description": "Will it show the range indicator. Useful for showing ranges in radar and related structures."
  },
  {
    "code": "^life$",
    "translate": "life",
    "section": "projectile",
    "description": "How long till this projectile gets removed if it hasn't hit a target, 300 might be a good starting point, change depending on speed and range"
  },
  {
    "code": "^deflectionPower$",
    "translate": "deflectionPower",
    "section": "projectile",
    "description": "Defaults to 1. Energy needed for laser defence to deflect. -1 to disable deflection (only disable for special weapons like flames)"
  },
  {
    "code": "^explodeOnEndOfLife$",
    "translate": "explodeOnEndOfLife",
    "section": "projectile",
    "description": "Default to false. True to explode at end of life with all side effects and area damage instead of disappearing. Good for making area-denial weapons."
  },
  {
    "code": "^autoTargetingOnDeadTarget$",
    "translate": "autoTargetingOnDeadTarget",
    "section": "projectile",
    "description": "Retarget to nearby unit if target dies while in transit"
  },
  {
    "code": "^autoTargetingOnDeadTargetRange$",
    "translate": "autoTargetingOnDeadTargetRange",
    "section": "projectile",
    "description": "The range which it will select a new target if old target has died"
  },
  {
    "code": "^autoTargetingOnDeadTargetLead$",
    "translate": "autoTargetingOnDeadTargetLead",
    "section": "projectile",
    "description": "The lead it will try to have on the new target"
  },
  {
    "code": "^unloadUpToXUnitsFromSource$",
    "translate": "unloadUpToXUnitsFromSource",
    "section": "projectile",
    "description": "Unload X units from source unit, to projectile explode location"
  },
  {
    "code": "^teleportSource$",
    "translate": "teleportSource",
    "section": "projectile",
    "description": "Move unit that shot this projectile to projectile explode location"
  },
  {
    "code": "^spawnUnit$",
    "translate": "spawnUnit",
    "section": "projectile",
    "description": "Spawn new units of this type at projectile explode location"
  },
  {
    "code": "^spawnProjectilesOnEndOfLife$",
    "translate": "spawnProjectilesOnEndOfLife",
    "section": "projectile",
    "description": "Spawns new projectiles on end of life, useful for secondary projectiles"
  },
  {
    "code": "^spawnProjectilesOnExplode$",
    "translate": "spawnProjectilesOnExplode",
    "section": "projectile",
    "description": "Projectiles to spawns when this projectile hits it's target"
  },
  {
    "code": "^spawnProjectilesOnCreate$",
    "translate": "spawnProjectilesOnCreate",
    "section": "projectile",
    "description": "Spawns projectiles on creation of this projectile, useful for making true shotgun-like projectile spread"
  },
  {
    "code": "^convertHitToSourceTeam$",
    "translate": "convertHitToSourceTeam",
    "section": "projectile",
    "description": "Convert units hit to the team that fired this projectile. Useful to make capturing systems"
  },
  {
    "code": "^tags$",
    "translate": "tags",
    "section": "projectile",
    "description": "List of comma separated strings. Used to classify units, create special actions and balances."
  },
  {
    "code": "^flameWeapon$",
    "translate": "flameWeapon",
    "section": "projectile",
    "description": "Generates small flames on hit (only cosmetic)"
  },
  {
    "code": "^delayedStartTimer$",
    "translate": "delayedStartTimer",
    "section": "projectile",
    "description": "Hide for x time before showing and updating effect."
  },
  {
    "code": "^directDamage$",
    "translate": "directDamage",
    "section": "projectile",
    "description": "Damage to target unit on hit. Does not work with targetGround:true as it won't have a clear unit to target"
  },
  {
    "code": "^areaDamage$",
    "translate": "areaDamage",
    "section": "projectile",
    "description": "Damages on arrival of target with an area effect, use areaRadius to adjust size of damage. targetGround needs this to damage"
  },
  {
    "code": "^areaRadius$",
    "translate": "areaRadius",
    "section": "projectile",
    "description": "How wide areaDamage effects. Note this drops off (unless areaDamageNoFalloff is used)"
  },
  {
    "code": "^areaDamageNoFalloff$",
    "translate": "areaDamageNoFalloff",
    "section": "projectile",
    "description": "Removes the falloff from areaDamage"
  },
  {
    "code": "^areaRadiusFromEdge$",
    "translate": "areaRadiusFromEdge",
    "section": "projectile",
    "description": "Applies damage from edge of units instead of center. Mostly effects large units."
  },
  {
    "code": "^areaExpandTime$",
    "translate": "areaExpandTime",
    "section": "projectile",
    "description": "Applies area damage as an expanding blast wave rather than instantly. Useful for nuke projectiles"
  },
  {
    "code": "^areaHitAirAndLandAtSameTime$",
    "translate": "areaHitAirAndLandAtSameTime",
    "section": "projectile",
    "description": "Defaults to false"
  },
  {
    "code": "^areaHitUnderwaterAlways$",
    "translate": "areaHitUnderwaterAlways",
    "section": "projectile",
    "description": "Defaults to false"
  },
  {
    "code": "^areaIgnoreUnitsCloserThan$",
    "translate": "areaIgnoreUnitsCloserThan",
    "section": "projectile",
    "description": "Units closer than this range aren't effected. Rarely needed. Not recommended for normal projectiles."
  },
  {
    "code": "^buildingDamageMultiplier$",
    "translate": "buildingDamageMultiplier",
    "section": "projectile",
    "description": "Defaults to 1"
  },
  {
    "code": "^shieldDamageMultiplier$",
    "translate": "shieldDamageMultiplier",
    "section": "projectile",
    "description": "Defaults to 1.  0 to do no damage to shields and 2 to do double damage"
  },
  {
    "code": "^shieldDefectionMultiplier$",
    "translate": "shieldDefectionMultiplier",
    "section": "projectile",
    "description": "Defaults to 1. The amount of shield to bypass. 0 to ignore shields and directly damage hull"
  },
  {
    "code": "^hullDamageMultiplier$",
    "translate": "hullDamageMultiplier",
    "section": "projectile",
    "description": "Defaults to 1. Can be used to create EMP weapons that affect shields only. 0 to ignore hull and only damage shields"
  },
  {
    "code": "^ignoreParentShootDamageMultiplier$",
    "translate": "ignoreParentShootDamageMultiplier",
    "section": "projectile",
    "description": "Sets whether multipliers are applied or not regardless of multipliers set in attack or setUnitStats"
  },
  {
    "code": "^armourIgnoreAmount$",
    "translate": "armourIgnoreAmount",
    "section": "projectile",
    "description": "Amount of armour to ignore on target and do damage as if this armour was not there"
  },
  {
    "code": "^friendlyFire$",
    "translate": "friendlyFire",
    "section": "projectile",
    "description": "Lets area effect projectiles damage own team units (can't damage allies). Useful for nuke-like weapons"
  },
  {
    "code": "^mutatorX_ifUnitWithTags$",
    "translate": "mutatorX_ifUnitWithTags",
    "section": "projectile",
    "description": "Applies mutators to this projectile if target has corresponding tags"
  },
  {
    "code": "^mutatorX_ifUnitWithoutTags$",
    "translate": "mutatorX_ifUnitWithoutTags",
    "section": "projectile",
    "description": "Same as ifUnitWithTags, but applies if target doesn't have the set tags"
  },
  {
    "code": "^mutatorX_directDamageMultiplier$",
    "translate": "mutatorX_directDamageMultiplier",
    "section": "projectile",
    "description": "Changes directDamage. Defaults to 1. Be careful not to confuse players using this as the effect may not be clear. Use amour instead when possible. Replace X with desired name"
  },
  {
    "code": "^mutatorX_areaDamageMultiplier$",
    "translate": "mutatorX_areaDamageMultiplier",
    "section": "projectile",
    "description": "Same as directDamageMultiplier but for areaDamage. Defaults to 1."
  },
  {
    "code": "^mutatorX_changedExplodeEffect$",
    "translate": "mutatorX_changedExplodeEffect",
    "section": "projectile",
    "description": "Change explode effect if this mutator is active. Eg make a bounce off amour effect. Helps to make the damage change more clear to players (Doesn't work with targetGround.)"
  },
  {
    "code": "^mutatorX_addResourcesDirectHit$",
    "translate": "mutatorX_addResourcesDirectHit",
    "section": "projectile",
    "description": "Add resource to all direct hit units. Warning: Be careful not be break units from other mods by adding random resources or energy to them that they don't expect."
  },
  {
    "code": "^mutatorX_addResourcesAreaHit$",
    "translate": "mutatorX_addResourcesAreaHit",
    "section": "projectile",
    "description": "Add resource to all area hit units. Warning: Be careful not be break units from other mods by adding random resources or energy to them that they don't expect."
  },
  {
    "code": "^targetGround$",
    "translate": "targetGround",
    "section": "projectile",
    "description": "Target ground, and don't home in on target. Note: only areaDamage is applied if targeting ground."
  },
  {
    "code": "^targetGround_includeTargetHeight$",
    "translate": "targetGround_includeTargetHeight",
    "section": "projectile",
    "description": "Default false. for area affect AA weapons"
  },
  {
    "code": "^targetGroundHeightOffset$",
    "translate": "targetGroundHeightOffset",
    "section": "projectile",
    "description": "Default 0. for shooting over or under a target. Useful for projectiles that split and rain down."
  },
  {
    "code": "^speed$",
    "translate": "speed",
    "section": "projectile",
    "description": "Projectile default travel speed"
  },
  {
    "code": "^targetSpeed$",
    "translate": "targetSpeed",
    "section": "projectile",
    "description": "Accelerate to this speed"
  },
  {
    "code": "^targetSpeedAcceleration$",
    "translate": "targetSpeedAcceleration",
    "section": "projectile",
    "description": "Controls the speed rampup for targetSpeed"
  },
  {
    "code": "^ballistic$",
    "translate": "ballistic",
    "section": "projectile",
    "description": "Makes projectiles fly up into the air and come down, instead of going in a straight line"
  },
  {
    "code": "^ballistic_delaymove_height$",
    "translate": "ballistic_delaymove_height",
    "section": "projectile",
    "description": "Sets up to how high the projectile needs to be before moving normally"
  },
  {
    "code": "^ballistic_height$",
    "translate": "ballistic_height",
    "section": "projectile",
    "description": "Sets the target height of the projectile"
  },
  {
    "code": "^targetGroundSpread$",
    "translate": "targetGroundSpread",
    "section": "projectile",
    "description": "Randomly makes the shot inaccurate by this amount. Also used by weapons like the flamethrower"
  },
  {
    "code": "^speedSpread$",
    "translate": "speedSpread",
    "section": "projectile",
    "description": "Randomly change the starting projectile speed by this amount"
  },
  {
    "code": "^instant$",
    "translate": "instant",
    "section": "projectile",
    "description": "Hit target instantly"
  },
  {
    "code": "^instantReuseLast$",
    "translate": "instantReuseLast",
    "section": "projectile",
    "description": "Recycles last projectile fired, only one projectile ever exists. Can turn lasers into beam weapons by using lower rate of fire and setting this to true"
  },
  {
    "code": "^instantReuseLast_alsoChangeTurretAim$",
    "translate": "instantReuseLast_alsoChangeTurretAim",
    "section": "projectile",
    "description": "Make turret's aim include last projectile's spread and sweep offsets, useful for beam weapons"
  },
  {
    "code": "^instantReuseLast_keepAreaDamageList$",
    "translate": "instantReuseLast_keepAreaDamageList",
    "section": "projectile",
    "description": "Default false. Keeping the list was the normal behaviour in 1.13 making area damage not apply a second time but this is not useful. Use this only if you want the old behaviour."
  },
  {
    "code": "^interceptProjectile_removeTargetLifeOnly$",
    "translate": "interceptProjectile_removeTargetLifeOnly",
    "section": "projectile",
    "description": "Defaults to false. When false projectiles are just removed. Could be true to make hit projectiles explode or split when hit"
  },
  {
    "code": "^disableLeadTargeting$",
    "translate": "disableLeadTargeting",
    "section": "projectile",
    "description": "Disable the lead targeting calculations when aiming at a moving target. Defaults false."
  },
  {
    "code": "^leadTargetingSpeedCalculation$",
    "translate": "leadTargetingSpeedCalculation",
    "section": "projectile",
    "description": "The expected speed of this projectile for targetGround lead target calculation. Defaults to 'targetSpeed' if set otherwise 'speed'."
  },
  {
    "code": "^initialUnguidedSpeedHeight$",
    "translate": "initialUnguidedSpeedHeight",
    "section": "projectile",
    "description": "Sets vertical speed for projectiles with targetGround. Use gravity to make smooth arching projectiles. Better have gravity value slightly slower than this key to produce the arches."
  },
  {
    "code": "^gravity$",
    "translate": "gravity",
    "section": "projectile",
    "description": "Controls the pull for projectiles that target ground. Use together with initialUnguidedSpeedHeight"
  },
  {
    "code": "^turnSpeed$",
    "translate": "turnSpeed",
    "section": "projectile",
    "description": "Max turn speed of the turret"
  },
  {
    "code": "^wobbleAmplitude$",
    "translate": "wobbleAmplitude",
    "section": "projectile",
    "description": "How wide the projectile will wobble"
  },
  {
    "code": "^wobbleFrequency$",
    "translate": "wobbleFrequency",
    "section": "projectile",
    "description": "How often the projectile will wobble"
  },
  {
    "code": "^pushForce$",
    "translate": "pushForce",
    "section": "projectile",
    "description": "Push (or pull with a negative value) the units that get hit. Divided by target mass"
  },
  {
    "code": "^pushVelocity$",
    "translate": "pushVelocity",
    "section": "projectile",
    "description": "Push (or pull with a negative value) the units that get hit. Ignores target mass"
  },
  {
    "code": "^moveWithParent$",
    "translate": "moveWithParent",
    "section": "projectile",
    "description": "Move projectile as parent moves. Useful for beam effects that need to stick to source turret."
  },
  {
    "code": "^sweepOffset$",
    "translate": "sweepOffset",
    "section": "projectile",
    "description": "Useful for beam effects."
  },
  {
    "code": "^sweepOffsetFromTargetRadius$",
    "translate": "sweepOffsetFromTargetRadius",
    "section": "projectile",
    "description": "Add to sweep offset by factor of target's radius. 0.4 would be 40%"
  },
  {
    "code": "^sweepSpeed$",
    "translate": "sweepSpeed",
    "section": "projectile",
    "description": "Useful for beam effects."
  },
  {
    "code": "^retargetingInFlight$",
    "translate": "retargetingInFlight",
    "section": "projectile",
    "description": "Can retarget a new target mid-flight, perfect for flak-style weapons and projectiles that collide"
  },
  {
    "code": "^retargetingInFlightSearchDelay$",
    "translate": "retargetingInFlightSearchDelay",
    "section": "projectile",
    "description": "How long between searching for new targets. Default 5"
  },
  {
    "code": "^retargetingInFlightSearchRange$",
    "translate": "retargetingInFlightSearchRange",
    "section": "projectile",
    "description": "Range which targets are reselected. Default 120"
  },
  {
    "code": "^retargetingInFlightSearchLead$",
    "translate": "retargetingInFlightSearchLead",
    "section": "projectile",
    "description": "The lead of the projectile to try to hit the target. Default 15"
  },
  {
    "code": "^retargetingInFlightSearchOnlyTags$",
    "translate": "retargetingInFlightSearchOnlyTags",
    "section": "projectile",
    "description": "Only retarget units with these tags"
  },
  {
    "code": "^color$",
    "translate": "color",
    "section": "projectile",
    "description": "Recolors this projectile using a hex value."
  },
  {
    "code": "^invisible$",
    "translate": "invisible",
    "section": "projectile",
    "description": "Don't render this turret, but still can shoot, etc."
  },
  {
    "code": "^image$",
    "translate": "image",
    "section": "projectile",
    "description": "File path to png image."
  },
  {
    "code": "^drawType$",
    "translate": "drawType",
    "section": "projectile",
    "description": "Built-in image to use. 0:projectiles.png 1:projectiles_large.png 2:projectiles2.png. Refer to end of sheet for the projectile images."
  },
  {
    "code": "^drawSize$",
    "translate": "drawSize",
    "section": "projectile",
    "description": "Scale image. Defaults to 1"
  },
  {
    "code": "^frame$",
    "translate": "frame",
    "section": "projectile",
    "description": "Built-in image frame to use, starts at zero."
  },
  {
    "code": "^hitSound$",
    "translate": "hitSound",
    "section": "projectile",
    "description": "Default true"
  },
  {
    "code": "^explodeEffect$",
    "translate": "explodeEffect",
    "section": "projectile",
    "description": "Produces the specified effects upon explosion."
  },
  {
    "code": "^explodeEffectOnShield$",
    "translate": "explodeEffectOnShield",
    "section": "projectile",
    "description": "Use this effect if shield is active on target"
  },
  {
    "code": "^teamColorRatio$",
    "translate": "teamColorRatio",
    "section": "projectile",
    "description": "Mix 0-1 of team colour into color field"
  },
  {
    "code": "^teamColorRatio_sourceRatio$",
    "translate": "teamColorRatio_sourceRatio",
    "section": "projectile",
    "description": "default is (1-teamColorRatio). Keep more of color when mixing. Note this might saturate colors."
  },
  {
    "code": "^drawUnderUnits$",
    "translate": "drawUnderUnits",
    "section": "projectile",
    "description": "If true, renders the projectile under units. Great for torpedos."
  },
  {
    "code": "^effectOnCreate$",
    "translate": "effectOnCreate",
    "section": "projectile",
    "description": "Produces specified effects upon creation of the projectile."
  },
  {
    "code": "^shouldRevealFog$",
    "translate": "shouldRevealFog",
    "section": "projectile",
    "description": "Reveal fog to player on explode"
  },
  {
    "code": "^alwaysVisibleInFog$",
    "translate": "alwaysVisibleInFog",
    "section": "projectile",
    "description": "Renders the projectile even when fog is present"
  },
  {
    "code": "^nukeWeapon$",
    "translate": "nukeWeapon",
    "section": "projectile",
    "description": "Shows on mini-map when fired. Some other side effects as well, like nuke explosion effect"
  },
  {
    "code": "^trailEffect$",
    "translate": "trailEffect",
    "section": "projectile",
    "description": "true for built-in defaults, but can also point to any custom effects"
  },
  {
    "code": "^trailEffectRate$",
    "translate": "trailEffectRate",
    "section": "projectile",
    "description": "Defaults to 3"
  },
  {
    "code": "^lightCastOnGround$",
    "translate": "lightCastOnGround",
    "section": "projectile",
    "description": "Renders light under the projectile"
  },
  {
    "code": "^lightSize$",
    "translate": "lightSize",
    "section": "projectile",
    "description": "Sets the size of the light emitted by the projectile. 1 value = 1 tile"
  },
  {
    "code": "^lightColor$",
    "translate": "lightColor",
    "section": "projectile",
    "description": "Sets the color of the light emitted by the projectile."
  },
  {
    "code": "^largeHitEffect$",
    "translate": "largeHitEffect",
    "section": "projectile",
    "description": "Creates a large explosion and accompanying sound on hit (only cosmetic)"
  },
  {
    "code": "^lightingEffect$",
    "translate": "lightingEffect",
    "section": "projectile",
    "description": "Draw as lighting works best with instant:true"
  },
  {
    "code": "^laserEffect$",
    "translate": "laserEffect",
    "section": "projectile",
    "description": "Draw as laser works best with instant:true"
  },
  {
    "code": "^beamImage$",
    "translate": "beamImage",
    "section": "projectile",
    "description": "Image to use for beam and laser effect type projectiles. Image is repeated vertically depending on the distance to target. Beam image should be 20 pixels or longer. Width does not matter, only the height."
  },
  {
    "code": "^beamImageOffsetRate$",
    "translate": "beamImageOffsetRate",
    "section": "projectile",
    "description": "Sets how fast the beam image moves towards or away from the target"
  },
  {
    "code": "^beamImageStart$",
    "translate": "beamImageStart",
    "section": "projectile",
    "description": "Sprite for the origin point of the custom beam"
  },
  {
    "code": "^beamImageStartRotated$",
    "translate": "beamImageStartRotated",
    "section": "projectile",
    "description": "Defaults false. True to rotate with turret angle"
  },
  {
    "code": "^beamImageEnd$",
    "translate": "beamImageEnd",
    "section": "projectile",
    "description": "Sprite for the end point of the custom beam"
  },
  {
    "code": "^beamImageEndRotated$",
    "translate": "beamImageEndRotated",
    "section": "projectile",
    "description": "Defaults false"
  },
  {
    "code": "^movementType$",
    "translate": "movementType",
    "section": "movement",
    "description": "The type of movement of units."
  },
  {
    "code": "^slowDeathFall$",
    "translate": "slowDeathFall",
    "section": "movement",
    "description": "Used with large aircraft. Makes the unit fall slowly while maintaining its speed at the time of death."
  },
  {
    "code": "^moveSpeed$",
    "translate": "moveSpeed",
    "section": "movement",
    "description": "Maximum movement speed of the unit. A value of 1 means (1 pixel * 60) per second (or 3 tiles per second)"
  },
  {
    "code": "^moveAccelerationSpeed$",
    "translate": "moveAccelerationSpeed",
    "section": "movement",
    "description": "Defines how fast units accelerate to max speed."
  },
  {
    "code": "^moveDecelerationSpeed$",
    "translate": "moveDecelerationSpeed",
    "section": "movement",
    "description": "Don't make this too low or units will have trouble stopping at waypoints"
  },
  {
    "code": "^reverseSpeedPercentage$",
    "translate": "reverseSpeedPercentage",
    "section": "movement",
    "description": "0.6 default. Over 0.4 will reverse for short distances (at 40% speed). If set to 1 will drive in reverse same as forwards. Useful if slow turning"
  },
  {
    "code": "^landOnGround$",
    "translate": "landOnGround",
    "section": "movement",
    "description": "Should flying unit land when idle."
  },
  {
    "code": "^targetHeight$",
    "translate": "targetHeight",
    "section": "movement",
    "description": "Defaults to 0 but if AIR movementType default is 35"
  },
  {
    "code": "^targetHeightDrift$",
    "translate": "targetHeightDrift",
    "section": "movement",
    "description": "Smooth animated height change. Defaults to 0 but if AIR movementType default is 1.5"
  },
  {
    "code": "^startingHeightOffset$",
    "translate": "startingHeightOffset",
    "section": "movement",
    "description": "Sets the initial height on spawn. Defaults at 0."
  },
  {
    "code": "^heightChangeRate$",
    "translate": "heightChangeRate",
    "section": "movement",
    "description": "Rate at which the unit changes height, either from converting or drifting"
  },
  {
    "code": "^fallingAcceleration$",
    "translate": "fallingAcceleration",
    "section": "movement",
    "description": "The acceleration in which a unit drops"
  },
  {
    "code": "^fallingAccelerationDead$",
    "translate": "fallingAccelerationDead",
    "section": "movement",
    "description": "fallingAcceleration but when destroyed"
  },
  {
    "code": "^maxTurnSpeed$",
    "translate": "maxTurnSpeed",
    "section": "movement",
    "description": "Sets the top turning speed of a unit"
  },
  {
    "code": "^turnAcceleration$",
    "translate": "turnAcceleration",
    "section": "movement",
    "description": "Defines how fast units accelerate to max turn speed."
  },
  {
    "code": "^moveSlidingMode$",
    "translate": "moveSlidingMode",
    "section": "movement",
    "description": "Makes the unit slide when moveDecelerationSpeed is lower, making them drift and feel natural"
  },
  {
    "code": "^moveIgnoringBody$",
    "translate": "moveIgnoringBody",
    "section": "movement",
    "description": "Allows the unit to move without fully turning in the direction its moving, useful for ships and air units"
  },
  {
    "code": "^moveSlidingDir$",
    "translate": "moveSlidingDir",
    "section": "movement",
    "description": "Sets direction when sliding"
  },
  {
    "code": "^joinsGroupFormations$",
    "translate": "joinsGroupFormations",
    "section": "movement",
    "description": "Defaults to true. Changing not recommended. When false, the unit will directly move to the assigned waypoint without taking space consideration from neighboring units."
  },
  {
    "code": "^useAsBuilder$",
    "translate": "useAsBuilder",
    "section": "ai",
    "description": "Set to true if unit can build or repair buildings. Defaults to [core]isBuilder."
  },
  {
    "code": "^useAsTransport$",
    "translate": "useAsTransport",
    "section": "ai",
    "description": "Defaults to true if unit can transport units"
  },
  {
    "code": "^useAsHarvester$",
    "translate": "useAsHarvester",
    "section": "ai",
    "description": "Defaults to true if unit can reclaim resources"
  },
  {
    "code": "^disableUse$",
    "translate": "disableUse",
    "section": "ai",
    "description": "Disallow AI building this unit or building"
  },
  {
    "code": "^aiTags$",
    "translate": "aiTags",
    "section": "ai",
    "description": "SPECULATIVE - sets separate set of tags for AI use"
  },
  {
    "code": "^ai_upgradePriority$",
    "translate": "ai_upgradePriority",
    "section": "ai",
    "description": "Defaults to 0.06. Set between 0-1, higher means AI is more likely to upgrade this unit before others"
  },
  {
    "code": "^maxGlobal$",
    "translate": "maxGlobal",
    "section": "ai",
    "description": "Maximum amount allowed for a specific structure for an AI team per map"
  },
  {
    "code": "^maxEachBase$",
    "translate": "maxEachBase",
    "section": "ai",
    "description": "Maximum amount allowed for a specific structure for an AI team per \"base\", usually around an extractor or spawn point. To check for an AI base in sandbox, enable Debug Mode and Click Shift + F3"
  },
  {
    "code": "^buildPriority$",
    "translate": "buildPriority",
    "section": "ai",
    "description": "0-1. AI uses 0.8 for first land factory, 0.48 for air factory, 0.47 for first turret."
  },
  {
    "code": "^noneInBaseExtraPriority$",
    "translate": "noneInBaseExtraPriority",
    "section": "ai",
    "description": "Adds to buildPriority, if this unit doesn't exist in the AIs base"
  },
  {
    "code": "^noneGlobalExtraPriority$",
    "translate": "noneGlobalExtraPriority",
    "section": "ai",
    "description": "Adds to buildPriority, if this unit doesn't exist in the any where on the map"
  },
  {
    "code": "^recommendedInEachBaseNum$",
    "translate": "recommendedInEachBaseNum",
    "section": "ai",
    "description": "Defaults to 0"
  },
  {
    "code": "^recommendedInEachBasePriorityIfUnmet$",
    "translate": "recommendedInEachBasePriorityIfUnmet",
    "section": "ai",
    "description": "Defaults to 0.5. Overrides buildPriority if recommended in base is too low."
  },
  {
    "code": "^upgradedFrom$",
    "translate": "upgradedFrom",
    "section": "ai",
    "description": "Create link to another unit to preserve max counts for upgraded and non-upgraded types in same base."
  },
  {
    "code": "^notPassivelyTargetedByOtherUnits$",
    "translate": "notPassivelyTargetedByOtherUnits",
    "section": "ai",
    "description": "Useful for walls, etc"
  },
  {
    "code": "^lowPriorityTargetForOtherUnits$",
    "translate": "lowPriorityTargetForOtherUnits",
    "section": "ai",
    "description": "Useful for units that cannot attack back. Eg walls"
  },
  {
    "code": "^whenUsingAsHarvester_recommendedInEachBase$",
    "translate": "whenUsingAsHarvester_recommendedInEachBase",
    "section": "ai",
    "description": "Assigns unit of the same name with certain amount on an AI base"
  },
  {
    "code": "^whenUsingAsHarvester_recommendedGlobal$",
    "translate": "whenUsingAsHarvester_recommendedGlobal",
    "section": "ai",
    "description": "Assigns unit of the same name with certain amount on map"
  },
  {
    "code": "^whenUsingAsHarvester_includeOtherHarvesterCounts$",
    "translate": "whenUsingAsHarvester_includeOtherHarvesterCounts",
    "section": "ai",
    "description": "Includes all harvester types on a single counter"
  },
  {
    "code": "^onlyUseAsHarvester_ifBaseHasUnitTagged$",
    "translate": "onlyUseAsHarvester_ifBaseHasUnitTagged",
    "section": "ai",
    "description": "Only sets the harvester unit as a harvester if an AI base has a unit with particular tag(s)"
  },
  {
    "code": "^x$",
    "translate": "x",
    "section": "leg",
    "description": "Sets the horizontal position of the turret. 0 is center, negatives toward left, positives toward right."
  },
  {
    "code": "^y$",
    "translate": "y",
    "section": "leg",
    "description": "Sets the vertical position of the turret.  0 is center, negatives toward bottom, positives toward top."
  },
  {
    "code": "^copyFrom$",
    "translate": "copyFrom",
    "section": "leg",
    "description": "Uses unit data from another ini file as default for this unit, supports multiple files."
  },
  {
    "code": "^attach_x$",
    "translate": "attach_x",
    "section": "leg",
    "description": "Sets the leg's attach point on the X axis."
  },
  {
    "code": "^attach_y$",
    "translate": "attach_y",
    "section": "leg",
    "description": "Sets the leg's attach point on the Y axis."
  },
  {
    "code": "^rotateSpeed$",
    "translate": "rotateSpeed",
    "section": "leg",
    "description": "Sets the leg's rotation speed on movement"
  },
  {
    "code": "^endDirOffset$",
    "translate": "endDirOffset",
    "section": "leg",
    "description": "Target foot/end rotation relative to body"
  },
  {
    "code": "^lockMovement$",
    "translate": "lockMovement",
    "section": "leg",
    "description": "Lock to unit body. Useful if walking unit converted to a flying unit."
  },
  {
    "code": "^heightSpeed$",
    "translate": "heightSpeed",
    "section": "leg",
    "description": "Sets how fast the leg rises while walking"
  },
  {
    "code": "^moveSpeed$",
    "translate": "moveSpeed",
    "section": "leg",
    "description": "Maximum movement speed of the unit. A value of 1 means (1 pixel * 60) per second (or 3 tiles per second)"
  },
  {
    "code": "^moveWarmUp$",
    "translate": "moveWarmUp",
    "section": "leg",
    "description": "Delay before the leg moved"
  },
  {
    "code": "^holdDisMin$",
    "translate": "holdDisMin",
    "section": "leg",
    "description": "Defaults to 7. Reposition leg at this distance if neighbor legs are not already repositioning."
  },
  {
    "code": "^holdDisMax$",
    "translate": "holdDisMax",
    "section": "leg",
    "description": "Defaults to 16. Force reposition of leg at this distance. Repositions leg at this distance even if a neighboring leg is moving"
  },
  {
    "code": "^holdDisMin_maxMovingLegs$",
    "translate": "holdDisMin_maxMovingLegs",
    "section": "leg",
    "description": "Sets maximum amount of legs to check before applying distance holding"
  },
  {
    "code": "^hold_moveOnlyIfFurthest$",
    "translate": "hold_moveOnlyIfFurthest",
    "section": "leg",
    "description": "Defaults to true. When true, starting moving leg only if it is currently the furthest leg from where it should be."
  },
  {
    "code": "^holdDisMin_checkNeighbours$",
    "translate": "holdDisMin_checkNeighbours",
    "section": "leg",
    "description": "Checks neighbors before applying distance holding"
  },
  {
    "code": "^hardLimit$",
    "translate": "hardLimit",
    "section": "leg",
    "description": "Defaults to 50. Force leg to never go this far. Better to not be reached."
  },
  {
    "code": "^estimatingPositionMultiplier$",
    "translate": "estimatingPositionMultiplier",
    "section": "leg",
    "description": "defaults to 1. Predicts were unit will be for leg placement based on unit speed."
  },
  {
    "code": "^hidden$",
    "translate": "hidden",
    "section": "leg",
    "description": "When true, hides the arm/leg"
  },
  {
    "code": "^image_end$",
    "translate": "image_end",
    "section": "leg",
    "description": "Sets the main arm end sprite"
  },
  {
    "code": "^image_end_shadow$",
    "translate": "image_end_shadow",
    "section": "leg",
    "description": "Sets the shadow for the arm"
  },
  {
    "code": "^image_end_teamColors$",
    "translate": "image_end_teamColors",
    "section": "leg",
    "description": "When true, the arm end will apply team colors"
  },
  {
    "code": "^image_foot$",
    "translate": "image_foot",
    "section": "leg",
    "description": "same as image_end, but acts as the foot for the leg"
  },
  {
    "code": "^image_foot_shadow$",
    "translate": "image_foot_shadow",
    "section": "leg",
    "description": "Sets the shadow for the foot"
  },
  {
    "code": "^image_middle$",
    "translate": "image_middle",
    "section": "leg",
    "description": "Sets the arm image"
  },
  {
    "code": "^image_leg$",
    "translate": "image_leg",
    "section": "leg",
    "description": "Sets the leg image"
  },
  {
    "code": "^draw_foot_on_top$",
    "translate": "draw_foot_on_top",
    "section": "leg",
    "description": "Renders foot above leg"
  },
  {
    "code": "^drawOverBody$",
    "translate": "drawOverBody",
    "section": "leg",
    "description": "Draw over body"
  },
  {
    "code": "^drawUnderAllUnits$",
    "translate": "drawUnderAllUnits",
    "section": "leg",
    "description": "Draw over all units"
  },
  {
    "code": "^drawDirOffset$",
    "translate": "drawDirOffset",
    "section": "leg",
    "description": "Rotates the foot/arm sprite to a specified direction"
  },
  {
    "code": "^dust_effect$",
    "translate": "dust_effect",
    "section": "leg",
    "description": "Spawns dust particles on each step."
  },
  {
    "code": "^spinRate$",
    "translate": "spinRate",
    "section": "leg",
    "description": "Makes arm/leg spin, like idleSpin for turrets. Great for helicopters"
  },
  {
    "code": "^favourOppositeSideNeighbours$",
    "translate": "favourOppositeSideNeighbours",
    "section": "leg",
    "description": "calculate neighbours with X 10 times closer than Y"
  },
  {
    "code": "^drawLegWhenZoomedOut$",
    "translate": "drawLegWhenZoomedOut",
    "section": "leg",
    "description": "For performance, defaults changes based on unit size"
  },
  {
    "code": "^drawFootWhenZoomedOut$",
    "translate": "drawFootWhenZoomedOut",
    "section": "leg",
    "description": "For performance, defaults changes based on unit size"
  },
  {
    "code": "^liftingHeightOffset$",
    "translate": "liftingHeightOffset",
    "section": "leg",
    "description": "Often used with decals"
  },
  {
    "code": "^targetHeight$",
    "translate": "targetHeight",
    "section": "leg",
    "description": "Defaults to 0 but if AIR movementType default is 35"
  },
  {
    "code": "^targetHeightRelative$",
    "translate": "targetHeightRelative",
    "section": "leg",
    "description": "Apply height relative to unit's height"
  },
  {
    "code": "^resetAngle$",
    "translate": "resetAngle",
    "section": "leg",
    "description": "Unused"
  },
  {
    "code": "^x$",
    "translate": "x",
    "section": "attachment",
    "description": "Sets the horizontal position of the turret. 0 is center, negatives toward left, positives toward right."
  },
  {
    "code": "^y$",
    "translate": "y",
    "section": "attachment",
    "description": "Sets the vertical position of the turret.  0 is center, negatives toward bottom, positives toward top."
  },
  {
    "code": "^height$",
    "translate": "height",
    "section": "attachment",
    "description": "Height of the unit in 3D, to be used with decals"
  },
  {
    "code": "^idleDir$",
    "translate": "idleDir",
    "section": "attachment",
    "description": "Defaults to 0"
  },
  {
    "code": "^idleDirReversing$",
    "translate": "idleDirReversing",
    "section": "attachment",
    "description": "Defaults to idleDir+180 unless attached to another turret (as attached turret will often be rotating when reversing)"
  },
  {
    "code": "^isVisible$",
    "translate": "isVisible",
    "section": "attachment",
    "description": "Hide this build link if true in this unit UI."
  },
  {
    "code": "^onCreateSpawnUnitOf$",
    "translate": "onCreateSpawnUnitOf",
    "section": "attachment",
    "description": "Upon spawning the unit, specified attached unit is also spawned as attachment"
  },
  {
    "code": "^isUnselectable$",
    "translate": "isUnselectable",
    "section": "attachment",
    "description": "If true unit cannot be selected. (includes AI players)"
  },
  {
    "code": "^canAttack$",
    "translate": "canAttack",
    "section": "attachment",
    "description": "If set to false, can not attack any unit. Overrides other canAttack options altogether."
  },
  {
    "code": "^canBeAttackedAndDamaged$",
    "translate": "canBeAttackedAndDamaged",
    "section": "attachment",
    "description": "When true, the attachment is vulnerable to attacks"
  },
  {
    "code": "^deattachIfWantingToMove$",
    "translate": "deattachIfWantingToMove",
    "section": "attachment",
    "description": "If the unit is ordered to move, it will detach. This includes waypoints from actions."
  },
  {
    "code": "^lockLegMovement$",
    "translate": "lockLegMovement",
    "section": "attachment",
    "description": "Locks the leg movement while attached."
  },
  {
    "code": "^keepAliveWhenParentDies$",
    "translate": "keepAliveWhenParentDies",
    "section": "attachment",
    "description": "Defaults to false"
  },
  {
    "code": "^setDrawLayerOnTop$",
    "translate": "setDrawLayerOnTop",
    "section": "attachment",
    "description": "Renders the attachment above the base unit"
  },
  {
    "code": "^setDrawLayerOnBottom$",
    "translate": "setDrawLayerOnBottom",
    "section": "attachment",
    "description": "Renders the attachment below the base unit"
  },
  {
    "code": "^addTransportedUnits$",
    "translate": "addTransportedUnits",
    "section": "attachment",
    "description": "Often used with transport units, when true, attaches one of the unit passenger to this attachment slot"
  },
  {
    "code": "^lockRotation$",
    "translate": "lockRotation",
    "section": "attachment",
    "description": "When true, stops the attachment  from rotating"
  },
  {
    "code": "^rotateWithParent$",
    "translate": "rotateWithParent",
    "section": "attachment",
    "description": "When true, the attachment rotates with the parent unit"
  },
  {
    "code": "^resetRotationWhenNotAttacking$",
    "translate": "resetRotationWhenNotAttacking",
    "section": "attachment",
    "description": "Similar to shouldResetTurret:for turrets."
  },
  {
    "code": "^prioritizeParentsMainTarget$",
    "translate": "prioritizeParentsMainTarget",
    "section": "attachment",
    "description": "It will priotize targeting the main target. Defaults to true."
  },
  {
    "code": "^alwaysAllowedToAttackParentsMainTarget$",
    "translate": "alwaysAllowedToAttackParentsMainTarget",
    "section": "attachment",
    "description": "Will always attack the parents main target."
  },
  {
    "code": "^onParentTeamChangeKeepCurrentTeam$",
    "translate": "onParentTeamChangeKeepCurrentTeam",
    "section": "attachment",
    "description": "Defaults false. If true attached units are not converted when parent changes team. Eg from [projectile]convertHitToSourceTeam"
  },
  {
    "code": "^onConvertKeepExistingUnitInSameSlot$",
    "translate": "onConvertKeepExistingUnitInSameSlot",
    "section": "attachment",
    "description": "When true, the attachment is retained on the same attachment slot when the parent is converted to another unit"
  },
  {
    "code": "^unloadInCurrentPosition$",
    "translate": "unloadInCurrentPosition",
    "section": "attachment",
    "description": "Defaults false. If true transported attached units are kept current attached location when unloading"
  },
  {
    "code": "^keepWaypointsNeedingMovement$",
    "translate": "keepWaypointsNeedingMovement",
    "section": "attachment",
    "description": "Defaults false. If true attached units keep waypoints with movement even while they cannot move. Useful if they will be automatically deattached soon."
  },
  {
    "code": "^smoothlyBlendPositionWhenExistingUnitAdded$",
    "translate": "smoothlyBlendPositionWhenExistingUnitAdded",
    "section": "attachment",
    "description": ""
  },
  {
    "code": "^showAllActionsFrom$",
    "translate": "showAllActionsFrom",
    "section": "attachment",
    "description": "Show all actions of the units attached in the parent unit list when selected"
  },
  {
    "code": "^createIncompleteIfParentIs$",
    "translate": "createIncompleteIfParentIs",
    "section": "attachment",
    "description": "If parent hasn't been built, create attachment with the same built value. Links built values till attachment is complete. Useful for buildings built with nano."
  },
  {
    "code": "^redirectDamageToParent$",
    "translate": "redirectDamageToParent",
    "section": "attachment",
    "description": "Redirects damage done to this attachment to the parent instead of damaging itself directly"
  },
  {
    "code": "^redirectDamageToParent_shieldOnly$",
    "translate": "redirectDamageToParent_shieldOnly",
    "section": "attachment",
    "description": "When enemies attack the attachment, all damage are redirected to the parent's shield"
  },
  {
    "code": "^text$",
    "translate": "text",
    "section": "action",
    "description": "Labels the action. Supports dynamic text"
  },
  {
    "code": "^textPostFix$",
    "translate": "textPostFix",
    "section": "action",
    "description": "Text shown as suffix, useful with textAddUnitName to create text UI"
  },
  {
    "code": "^displayType$",
    "translate": "displayType",
    "section": "action",
    "description": "Affects how the action button and text is displayed. Options: none, rally, upgrade, queueUnit, building, action, infoOnly, infoOnlyNoBox, infoOnlyStockpile"
  },
  {
    "code": "^displayRemainingStockpile$",
    "translate": "displayRemainingStockpile",
    "section": "action",
    "description": "Queue is shown as number of times action can be triggered based on price. Use dynamic text on text as alternative."
  },
  {
    "code": "^pos$",
    "translate": "pos",
    "section": "action",
    "description": "Order build link appears in this unit UI."
  },
  {
    "code": "^iconImage$",
    "translate": "iconImage",
    "section": "action",
    "description": "Sets a thumbnail image for the action button"
  },
  {
    "code": "^iconExtraImage$",
    "translate": "iconExtraImage",
    "section": "action",
    "description": "Drawn over top of icon image. Useful for upgrade icons, etc"
  },
  {
    "code": "^iconExtraColor$",
    "translate": "iconExtraColor",
    "section": "action",
    "description": "Defaults to #64FFFFFF"
  },
  {
    "code": "^iconExtraIsVisible$",
    "translate": "iconExtraIsVisible",
    "section": "action",
    "description": "When the condition is met, the extras for icon is visible."
  },
  {
    "code": "^unitShownInUI$",
    "translate": "unitShownInUI",
    "section": "action",
    "description": "Display this unit. (as if this action built this unit)"
  },
  {
    "code": "^guiBuildUnit$",
    "translate": "guiBuildUnit",
    "section": "action",
    "description": "Uses the UI similar when building structures. An alternative to fireTurretX on some cases"
  },
  {
    "code": "^setBuilt$",
    "translate": "setBuilt",
    "section": "action",
    "description": "Designates how built the unit is from a percentage of 0-100% with a number between 0 and 1."
  },
  {
    "code": "^tags$",
    "translate": "tags",
    "section": "action",
    "description": "List of comma separated strings. Used to classify units, create special actions and balances."
  },
  {
    "code": "^id$",
    "translate": "id",
    "section": "action",
    "description": "Allow same/equivalent actions to be more easily connected when converting between units, to preserve queues, calldowns, etc. (Normally action order is used but can be unstable.)"
  },
  {
    "code": "^textAddUnitName$",
    "translate": "textAddUnitName",
    "section": "action",
    "description": "Add this unit's name to this action's text"
  },
  {
    "code": "^descriptionAddFromUnit$",
    "translate": "descriptionAddFromUnit",
    "section": "action",
    "description": "Add this unit's description to this action's description"
  },
  {
    "code": "^descriptionAddUnitStats$",
    "translate": "descriptionAddUnitStats",
    "section": "action",
    "description": "Add this unit's stats (eg HP, energy, resources) to this action's description"
  },
  {
    "code": "^unitShownInUIWithHpBar$",
    "translate": "unitShownInUIWithHpBar",
    "section": "action",
    "description": "default true, Only used when unitShownInUI is a unitRef"
  },
  {
    "code": "^unitShownInUIWithProgressBar$",
    "translate": "unitShownInUIWithProgressBar",
    "section": "action",
    "description": "default true, Only used when unitShownInUI is a unitRef. Replaces HP bar if active"
  },
  {
    "code": "^alwaysSinglePress$",
    "translate": "alwaysSinglePress",
    "section": "action",
    "description": "Defaults false. When true no confirmation needed on mobile, when used with canPlayerCancel:false and allowMultipleInQueue:false will also hide the queue interface."
  },
  {
    "code": "^price$",
    "translate": "price",
    "section": "action",
    "description": "The unit cost from builders/buildings. Defaults to credits if no resource type is used"
  },
  {
    "code": "^isActive$",
    "translate": "isActive",
    "section": "action",
    "description": "Defaults true. If false then action is disabled and shown in red in UI."
  },
  {
    "code": "^isVisible$",
    "translate": "isVisible",
    "section": "action",
    "description": "Hide this build link if true in this unit UI."
  },
  {
    "code": "^isLocked$",
    "translate": "isLocked",
    "section": "action",
    "description": "Disallow building of this unit. Can be used with overrideAndReplace to restrict units player can build."
  },
  {
    "code": "^isLockedAlt$",
    "translate": "isLockedAlt",
    "section": "action",
    "description": "Another reason for this to be locked. Just allows a different message to be shown."
  },
  {
    "code": "^isLockedAltMessage(_.+)?$",
    "translate": "isLockedAltMessage",
    "section": "action",
    "description": "Message for isLockedAlt."
  },
  {
    "code": "^isLockedAlt2$",
    "translate": "isLockedAlt2",
    "section": "action",
    "description": "Like isLockedAlt but to show one more message."
  },
  {
    "code": "^isLockedAlt2Message(_.+)?$",
    "translate": "isLockedAlt2Message",
    "section": "action",
    "description": "Message for isLockedAlt2."
  },
  {
    "code": "^allowMultipleInQueue$",
    "translate": "allowMultipleInQueue",
    "section": "action",
    "description": "When false makes it so only one action can be queued of this type (useful for keeping actions with conditions from being spammed)"
  },
  {
    "code": "^onlyOneUnitAtATime$",
    "translate": "onlyOneUnitAtATime",
    "section": "action",
    "description": "When action is picked in UI, only one unit selected with get this action. Defaults to false."
  },
  {
    "code": "^isGuiBlinking$",
    "translate": "isGuiBlinking",
    "section": "action",
    "description": "Generates a blinking effect in UI if true."
  },
  {
    "code": "^isAlsoViewableByAllies$",
    "translate": "isAlsoViewableByAllies",
    "section": "action",
    "description": "Allows ally players to see actions from this unit, useful for showing stats to other players (eg missile count, items collected)"
  },
  {
    "code": "^isAlsoViewableByEnemies$",
    "translate": "isAlsoViewableByEnemies",
    "section": "action",
    "description": "Allows enemy players to see actions from this unit, useful for showing stats to other players (eg missile count, items collected)"
  },
  {
    "code": "^ai_isHighPriority$",
    "translate": "ai_isHighPriority",
    "section": "action",
    "description": "Use this for faction selection actions or other high priority actions such as building high priority units"
  },
  {
    "code": "^ai_isDisabled$",
    "translate": "ai_isDisabled",
    "section": "action",
    "description": "Defaults false. Stop AI using this action. (Note when ai_isHighPriority is true this might be ignored)"
  },
  {
    "code": "^ai_considerSameAsBuilding$",
    "translate": "ai_considerSameAsBuilding",
    "section": "action",
    "description": "Be careful with"
  },
  {
    "code": "^autoTriggerOnEvent$",
    "translate": "autoTriggerOnEvent",
    "section": "action",
    "description": "Action will be triggered when an event is happening on a particular unit. Options: created, completeAndActive, destroyed, killedAnyUnit, queuedUnitFinished, queueItemAdded(withActionTag=\"#\"), queueItemCancelled(withActionTag=\"#\"), teleported, touchTargetSuccess, newWaypointGivenByPlayer, teamChanged, transportingNewUnit, transportUnloadedOrRemovedUnit, tookDamage(withTag=\"#\"), newMessage(withTag=\"#\"), enteredTransport, leftTransport, attachmentRemoved. withTag parameter for tookDamage uses tag from projectile and it is optional. withTag parameter for newMessage uses message tags."
  },
  {
    "code": "^autoTriggerOnEventRecursionLimit$",
    "translate": "autoTriggerOnEventRecursionLimit",
    "section": "action",
    "description": "Defaults to 1. Prevents loops, useful with triggering itself so it doesn't infinitely triggers, good for repeating action effect on event"
  },
  {
    "code": "^autoTrigger$",
    "translate": "autoTrigger",
    "section": "action",
    "description": "When true triggers the effects of this action instantly (ignoring price, isActive, isVisible, buildSpeed, etc)"
  },
  {
    "code": "^aiUse$",
    "translate": "aiUse",
    "section": "action",
    "description": "The way AI uses this action."
  },
  {
    "code": "^autoTriggerCheckRate$",
    "translate": "autoTriggerCheckRate",
    "section": "action",
    "description": "options: everyFrame (default), every4Frames, every8Frames. Note: all triggers regardless of check rate are checked when first created and after an auto trigger cooldown. Note: Adding [core]autoTriggerCheckRate:every8Frames to all-units.template could have a large performance boost for mods with complex autoTriggers."
  },
  {
    "code": "^buildSpeed$",
    "translate": "buildSpeed",
    "section": "action",
    "description": "Time it takes to build the unit. (may multiply with builder speed)"
  },
  {
    "code": "^highPriorityQueue$",
    "translate": "highPriorityQueue",
    "section": "action",
    "description": "Defaults to false. If true this action skips all other low priority actions in queue. Useful for fireTurret actions."
  },
  {
    "code": "^canPlayerCancel$",
    "translate": "canPlayerCancel",
    "section": "action",
    "description": "Defaults to true. When false, players cannot cancel this particular action."
  },
  {
    "code": "^whenBuilding_cannotMove$",
    "translate": "whenBuilding_cannotMove",
    "section": "action",
    "description": "Stops unit moving while action is being applied. Useful for deploy like actions."
  },
  {
    "code": "^whenBuilding_playAnimation$",
    "translate": "whenBuilding_playAnimation",
    "section": "action",
    "description": "Plays a specified animation while the action is queued."
  },
  {
    "code": "^whenBuilding_rotateTo$",
    "translate": "whenBuilding_rotateTo",
    "section": "action",
    "description": "Rotate unit body to this direction when action is in active queue."
  },
  {
    "code": "^whenBuilding_rotateTo_orBackwards$",
    "translate": "whenBuilding_rotateTo_orBackwards",
    "section": "action",
    "description": "If true allow rotation in 180 degrees from whenBuilding_rotateTo when this is a smaller angle"
  },
  {
    "code": "^whenBuilding_rotateTo_waitTillRotated$",
    "translate": "whenBuilding_rotateTo_waitTillRotated",
    "section": "action",
    "description": "Pause action queue till rotation is finished"
  },
  {
    "code": "^whenBuilding_temporarilyConvertTo$",
    "translate": "whenBuilding_temporarilyConvertTo",
    "section": "action",
    "description": "Convert to another unit while action is in active queue. Note: actions from the original unit will be kept"
  },
  {
    "code": "^whenBuilding_temporarilyConvertTo_keepFields$",
    "translate": "whenBuilding_temporarilyConvertTo_keepFields",
    "section": "action",
    "description": "Don't change these fields when using whenBuilding_temporarilyConvertTo (both to and from)"
  },
  {
    "code": "^whenBuilding_triggerAction$",
    "translate": "whenBuilding_triggerAction",
    "section": "action",
    "description": "While action is queued, another action is triggered."
  },
  {
    "code": "^whenBuilding_rotateTo_aimAtActionTarget$",
    "translate": "whenBuilding_rotateTo_aimAtActionTarget",
    "section": "action",
    "description": "While action is queued, the unit is rotated to the target. Often used with fireTurretX actions"
  },
  {
    "code": "^whenBuilding_rotateTo_rotateTurretX$",
    "translate": "whenBuilding_rotateTo_rotateTurretX",
    "section": "action",
    "description": "While action is queued, a specified turret is aimed at the target. Often used with fireTurretX actions"
  },
  {
    "code": "^spawnEffectsOnQueue$",
    "translate": "spawnEffectsOnQueue",
    "section": "action",
    "description": "Effects to spawn at unit when action is first added to queue"
  },
  {
    "code": "^playSoundToPlayerOnQueue$",
    "translate": "playSoundToPlayerOnQueue",
    "section": "action",
    "description": "Global sound to play to unit's player only when action is first added to queue"
  },
  {
    "code": "^lockCameraToUnitOnQueue$",
    "translate": "lockCameraToUnitOnQueue",
    "section": "action",
    "description": "Only effects player that triggered the action. Locks the camera on this unit and stops if the player tries to move the camera. If multiple units are triggered, the camera won't lock at all."
  },
  {
    "code": "^addSelectedUnitOnQueue$",
    "translate": "addSelectedUnitOnQueue",
    "section": "action",
    "description": "Only effects player that triggered action. Modifies the current active player selection to include in addition the unit references."
  },
  {
    "code": "^setSelectedUnitOnQueue$",
    "translate": "setSelectedUnitOnQueue",
    "section": "action",
    "description": "Only effects player that triggered action. Modifies the current active player selection to become the unit references."
  },
  {
    "code": "^requireConditional$",
    "translate": "requireConditional",
    "section": "action",
    "description": "Skip all effects of this action if this evaluates to false"
  },
  {
    "code": "^convertTo$",
    "translate": "convertTo",
    "section": "action",
    "description": "Convert your unit into another unit. properties are preserved."
  },
  {
    "code": "^convertTo_keepCurrentTags$",
    "translate": "convertTo_keepCurrentTags",
    "section": "action",
    "description": "Keep current and temporarily tags and ignores default tags on convertTo target."
  },
  {
    "code": "^convertTo_keepCurrentFields$",
    "translate": "convertTo_keepCurrentFields",
    "section": "action",
    "description": "Don't change these fields when converting, useful with setUnitStats (Allowed fields: maxHp, maxShield, shieldRegen, maxEnergy, armour, mass, shootDelayMultiplier, moveSpeed, maxAttackRange.)"
  },
  {
    "code": "^addEnergy$",
    "translate": "addEnergy",
    "section": "action",
    "description": "Adds energy to unit. Has no effect unless energyMax is set. (Same as addResources: energy=X)"
  },
  {
    "code": "^addResources$",
    "translate": "addResources",
    "section": "action",
    "description": "Adds these resources to self when placing the building or producing the unit."
  },
  {
    "code": "^addResourcesScaledByAIHandicaps$",
    "translate": "addResourcesScaledByAIHandicaps",
    "section": "action",
    "description": "Same as addResources, but increased or decreased depending on AI difficulty level"
  },
  {
    "code": "^addResourcesWithLogic$",
    "translate": "addResourcesWithLogic",
    "section": "action",
    "description": "Like addResources but allows logic to be used for the resource value"
  },
  {
    "code": "^setResourcesWithLogic$",
    "translate": "setResourcesWithLogic",
    "section": "action",
    "description": "Sets target resources to this value instead of adding. Becareful with global resources."
  },
  {
    "code": "^deleteSelf$",
    "translate": "deleteSelf",
    "section": "action",
    "description": "Remove self with no explosions or sounds"
  },
  {
    "code": "^resetCustomTimer$",
    "translate": "resetCustomTimer",
    "section": "action",
    "description": "Reset timer used with self.customTimer()"
  },
  {
    "code": "^setBodyRotation$",
    "translate": "setBodyRotation",
    "section": "action",
    "description": "Rotates the unit to a particular direction. Supports dynamic values"
  },
  {
    "code": "^setSpeed$",
    "translate": "setSpeed",
    "section": "action",
    "description": "Sets the units current speed"
  },
  {
    "code": "^addSpeed$",
    "translate": "addSpeed",
    "section": "action",
    "description": "Adds to the units current speed"
  },
  {
    "code": "^setUnitStats$",
    "translate": "setUnitStats",
    "section": "action",
    "description": "Allows changing of a select number of fields dynamically without converting. Supports =/+=/-=, with dynamic maths/logic. Changeable fields: maxHp, hp, maxShield, shield, shieldRegen, maxEnergy, energy, armour, mass, shootDelayMultiplier, shootDamageMultiplier, moveSpeed, maxTurnSpeed, maxAttackRange, fogOfWarSightRange, nanoRange, selfRegenRate, targetHeight, nanoFactorySpeed. (targetHeight adjust the unit's height gradually relative to its current height, unlike setting it with setHeight)"
  },
  {
    "code": "^resetUnitStats$",
    "translate": "resetUnitStats",
    "section": "action",
    "description": "Reset changes made by setUnitStats to base values"
  },
  {
    "code": "^setUnitMemory$",
    "translate": "setUnitMemory",
    "section": "action",
    "description": "Change this unit's memory, values can be set with logic. Memory must first be defined with defineUnitMemory"
  },
  {
    "code": "^setHeight$",
    "translate": "setHeight",
    "section": "action",
    "description": "Changes unit height based on this height value"
  },
  {
    "code": "^setCustomTarget1$",
    "translate": "setCustomTarget1",
    "section": "action",
    "description": "Used for unit linking without requiring unit memories or markers. It is the unit that built this by default."
  },
  {
    "code": "^setCustomTarget2$",
    "translate": "setCustomTarget2",
    "section": "action",
    "description": "Like setCustomTarget1 and with the same use. It is none by default."
  },
  {
    "code": "^sendMessageTo$",
    "translate": "sendMessageTo",
    "section": "action",
    "description": "Sends a message to a targeted unit"
  },
  {
    "code": "^sendMessageWithTags$",
    "translate": "sendMessageWithTags",
    "section": "action",
    "description": "Useful for message detection in an autoTriggerOnEvent event, eg autoTriggerOnEvent:newMessage(withTag='xyz')"
  },
  {
    "code": "^sendMessageWithData$",
    "translate": "sendMessageWithData",
    "section": "action",
    "description": "The data that will be sent to the targeted unit. Allows multiple key-value pairs with any dynamic data type, use eventData() to read this data in the event"
  },
  {
    "code": "^refundAllQueuedItems$",
    "translate": "refundAllQueuedItems",
    "section": "action",
    "description": "Refunds the spent price in the queue of a specific action; Includes set flags in price"
  },
  {
    "code": "^removeAllQueuedItemsWithoutRefund$",
    "translate": "removeAllQueuedItemsWithoutRefund",
    "section": "action",
    "description": "Similar to refundAllQueuedItems, but does not refund"
  },
  {
    "code": "^alsoTriggerAction$",
    "translate": "alsoTriggerAction",
    "section": "action",
    "description": "Trigger to results of another action as well. Ignores action's requirements."
  },
  {
    "code": "^alsoQueueAction$",
    "translate": "alsoQueueAction",
    "section": "action",
    "description": "Adds another action into the normal unit's queue. Ignores action's requirements"
  },
  {
    "code": "^alsoTriggerOrQueueActionConditional$",
    "translate": "alsoTriggerOrQueueActionConditional",
    "section": "action",
    "description": "Defaults true. alsoTriggerAction and alsoQueueAction are ignored if this works out to be false."
  },
  {
    "code": "^alsoTriggerOrQueueActionWithTarget$",
    "translate": "alsoTriggerOrQueueActionWithTarget",
    "section": "action",
    "description": "Changes the target of the triggered action, normally defaults to the current action target. Effects things like fireTurretXAtGround, spawnUnits, thisActionTarget(), etc"
  },
  {
    "code": "^alsoTriggerActionRepeat$",
    "translate": "alsoTriggerActionRepeat",
    "section": "action",
    "description": "Repeats the alsoTriggerAction call, thisActionIndex changed on each repeat - Useful to create loops or work with arrays"
  },
  {
    "code": "^otherwiseTriggerAction$",
    "translate": "otherwiseTriggerAction",
    "section": "action",
    "description": "Triggers a different action if autoTrigger or requireConditionals return false. (Serves as the \"else\" in a generic programming syntax)"
  },
  {
    "code": "^playSoundAtUnit$",
    "translate": "playSoundAtUnit",
    "section": "action",
    "description": "Local sound to play when action finishes"
  },
  {
    "code": "^playSoundGlobally$",
    "translate": "playSoundGlobally",
    "section": "action",
    "description": "Global sound to play to all players in game"
  },
  {
    "code": "^playSoundToPlayer$",
    "translate": "playSoundToPlayer",
    "section": "action",
    "description": "Global sound to play to unit's player only"
  },
  {
    "code": "^fireTurretXAtGround$",
    "translate": "fireTurretXAtGround",
    "section": "action",
    "description": "When action finishes fire target turret at point on ground, bypasses canShoot rules in turret."
  },
  {
    "code": "^fireTurretXAtGround_withOffset$",
    "translate": "fireTurretXAtGround_withOffset",
    "section": "action",
    "description": "If not set player targets the ground with GUI, if a point is set this step is skipped"
  },
  {
    "code": "^fireTurretXAtGround_withProjectile$",
    "translate": "fireTurretXAtGround_withProjectile",
    "section": "action",
    "description": "Used with fireTurretXAtGround. Defaults to target turret's normal projectile."
  },
  {
    "code": "^fireTurretXAtGround_withTarget$",
    "translate": "fireTurretXAtGround_withTarget",
    "section": "action",
    "description": "Fires a turret aimed at the location of the indicated unit or marker"
  },
  {
    "code": "^fireTurretXAtGround_count$",
    "translate": "fireTurretXAtGround_count",
    "section": "action",
    "description": "Number of projectiles to fire. Defaults to 1"
  },
  {
    "code": "^fireTurretXAtGround_onlyOverPassableTileOf$",
    "translate": "fireTurretXAtGround_onlyOverPassableTileOf",
    "section": "action",
    "description": "Only allow tiles crossable by this movement type to be selected (e.g., LAND,BUILDING,WATER,HOVER)"
  },
  {
    "code": "^fireTurretXAtGround_showGuideDecals$",
    "translate": "fireTurretXAtGround_showGuideDecals",
    "section": "action",
    "description": "Draws decals at the target location. Recommend setting up decals with layer: inactive"
  },
  {
    "code": "^spawnUnits$",
    "translate": "spawnUnits",
    "section": "action",
    "description": "Spawn units at action's target. See 'Spawn units line' section in this doc for details."
  },
  {
    "code": "^produceUnits$",
    "translate": "produceUnits",
    "section": "action",
    "description": "Like spawnUnits but unit exits as if it was produced normally, and gets a move away waypoint"
  },
  {
    "code": "^spawnEffects$",
    "translate": "spawnEffects",
    "section": "action",
    "description": "Effects to spawn at unit"
  },
  {
    "code": "^offsetSelfAbsolute$",
    "translate": "offsetSelfAbsolute",
    "section": "action",
    "description": "Offsets unit position absolutely by this point. Format: [x,y,height]"
  },
  {
    "code": "^teleportTo$",
    "translate": "teleportTo",
    "section": "action",
    "description": "Changes unit position to this position. Great alternative to fireTurretX with teleporting projectile"
  },
  {
    "code": "^addUnitsIntoTransport$",
    "translate": "addUnitsIntoTransport",
    "section": "action",
    "description": "Creates and add units into transport, use self.transportingCount() to check for space before adding"
  },
  {
    "code": "^transportTargetNow$",
    "translate": "transportTargetNow",
    "section": "action",
    "description": "{Currently broken in 1.15 - don't use} Instantly tries to transports existing units on the map into this transport. Might fail if rules don't allow this unit to be transported."
  },
  {
    "code": "^forceTransportTargetNow$",
    "translate": "forceTransportTargetNow",
    "section": "action",
    "description": "Bypasses all transport checks even if the target is not even a transport. Be careful with usage"
  },
  {
    "code": "^deleteNumUnitsFromTransport$",
    "translate": "deleteNumUnitsFromTransport",
    "section": "action",
    "description": "Removes a specified amount of cargo units"
  },
  {
    "code": "^deleteNumUnitsFromTransport_onlyWithTags$",
    "translate": "deleteNumUnitsFromTransport_onlyWithTags",
    "section": "action",
    "description": "Removes a specified amount of cargo units, but only those with specified tags"
  },
  {
    "code": "^startUnloadingTransport$",
    "translate": "startUnloadingTransport",
    "section": "action",
    "description": "Unloads all cargo units normally"
  },
  {
    "code": "^forceUnloadTransportNow$",
    "translate": "forceUnloadTransportNow",
    "section": "action",
    "description": "For unload all units, or slot targeted by forceUnloadTransportNow_onlyOnSlot. Unloads even if no space or overwater, etc. Take note that the payloads are unloaded on the exit coordinates of the units (exit_x and exit_y in [core] section)"
  },
  {
    "code": "^forceUnloadTransportNow_onlyOnSlot$",
    "translate": "forceUnloadTransportNow_onlyOnSlot",
    "section": "action",
    "description": "Focuses the force unload to a specific slot"
  },
  {
    "code": "^clearAllWaypoints$",
    "translate": "clearAllWaypoints",
    "section": "action",
    "description": "Clears all waypoints, be careful not to annoy players by removing their orders, prepending waypoints is often better"
  },
  {
    "code": "^clearActiveWaypoint$",
    "translate": "clearActiveWaypoint",
    "section": "action",
    "description": "Clears only the current waypoint"
  },
  {
    "code": "^addWaypoint_type$",
    "translate": "addWaypoint_type",
    "section": "action",
    "description": "Adds a waypoint with a specific purpose. Options: move, attackMove, guard, loadInto, loadUp, attack, reclaim, repair, touchTarget, build, follow, setPassiveTarget"
  },
  {
    "code": "^addWaypoint_unitType$",
    "translate": "addWaypoint_unitType",
    "section": "action",
    "description": "Only for use with addWaypoint_type:build"
  },
  {
    "code": "^addWaypoint_prepend$",
    "translate": "addWaypoint_prepend",
    "section": "action",
    "description": "Add to the start of the waypoint queue or the end"
  },
  {
    "code": "^addWaypoint_triggerActionIfFailed$",
    "translate": "addWaypoint_triggerActionIfFailed",
    "section": "action",
    "description": "If target_nearestUnit fails to find a match so waypoint cannot be added then trigger this action"
  },
  {
    "code": "^addWaypoint_triggerActionIfMatched$",
    "translate": "addWaypoint_triggerActionIfMatched",
    "section": "action",
    "description": "Triggers an action if a waypoint is legal"
  },
  {
    "code": "^addWaypoint_maxTime$",
    "translate": "addWaypoint_maxTime",
    "section": "action",
    "description": "Automatically remove this waypoint if it has been active for longer than this time."
  },
  {
    "code": "^addWaypoint_target_nearestUnit_tagged$",
    "translate": "addWaypoint_target_nearestUnit_tagged",
    "section": "action",
    "description": "Puts the waypoint to a nearest unit with specific tags"
  },
  {
    "code": "^addWaypoint_target_nearestUnit_team$",
    "translate": "addWaypoint_target_nearestUnit_team",
    "section": "action",
    "description": "Puts the waypoint to a nearest unit with a specific relation to the player's unit. Options: own, neutral, allyNotOwn, ally, enemy, any, notOwn"
  },
  {
    "code": "^addWaypoint_target_nearestUnit_maxRange$",
    "translate": "addWaypoint_target_nearestUnit_maxRange",
    "section": "action",
    "description": "Puts the waypoint to a nearest unit within the maximum range specified."
  },
  {
    "code": "^addWaypoint_target_mapMustBeReachable$",
    "translate": "addWaypoint_target_mapMustBeReachable",
    "section": "action",
    "description": "Puts the waypoint only if the waypoint target is reachable by the unit (e.g., if a unit cannot cross two islands, the waypoint is not placed.)"
  },
  {
    "code": "^addWaypoint_target_fromReference$",
    "translate": "addWaypoint_target_fromReference",
    "section": "action",
    "description": "Puts the waypoint to a marker or a reference unit"
  },
  {
    "code": "^addWaypoint_position_offsetFromSelf$",
    "translate": "addWaypoint_position_offsetFromSelf",
    "section": "action",
    "description": "Puts the waypoint to an absolute coordinate"
  },
  {
    "code": "^addWaypoint_position_fromAction$",
    "translate": "addWaypoint_position_fromAction",
    "section": "action",
    "description": "Puts the waypoint taken from an action that triggered this action"
  },
  {
    "code": "^addWaypoint_position_randomOffsetFromSelf$",
    "translate": "addWaypoint_position_randomOffsetFromSelf",
    "section": "action",
    "description": "Puts the waypoint to a random relative coordinate"
  },
  {
    "code": "^addWaypoint_position_relativeOffsetFromSelf$",
    "translate": "addWaypoint_position_relativeOffsetFromSelf",
    "section": "action",
    "description": "Puts the waypoint to a relative coordinate"
  },
  {
    "code": "^addWaypoint_target_randomUnit_tagged$",
    "translate": "addWaypoint_target_randomUnit_tagged",
    "section": "action",
    "description": "Puts the waypoint to a random unit with specific tags"
  },
  {
    "code": "^addWaypoint_target_randomUnit_team$",
    "translate": "addWaypoint_target_randomUnit_team",
    "section": "action",
    "description": "Puts the waypoint to a random unit with a specific relation to the player's unit. Options: own, neutral, allyNotOwn, ally, enemy, any, notOwn"
  },
  {
    "code": "^addWaypoint_target_randomUnit_maxRange$",
    "translate": "addWaypoint_target_randomUnit_maxRange",
    "section": "action",
    "description": "Puts the waypoint to a random unit within the maximum range specified."
  },
  {
    "code": "^addAllActionCooldownsTime$",
    "translate": "addAllActionCooldownsTime",
    "section": "action",
    "description": "Adds cooldown on all actions, including canBuilds"
  },
  {
    "code": "^addActionCooldownTime$",
    "translate": "addActionCooldownTime",
    "section": "action",
    "description": "Player cannot use action again for this amount of time"
  },
  {
    "code": "^addActionCooldownApplyToActions$",
    "translate": "addActionCooldownApplyToActions",
    "section": "action",
    "description": "Sets addActionCooldownTime's target. Defaults to this action."
  },
  {
    "code": "^clearAllActionCooldowns$",
    "translate": "clearAllActionCooldowns",
    "section": "action",
    "description": "Removes all existing cooldowns on all buttons"
  },
  {
    "code": "^playAnimation$",
    "translate": "playAnimation",
    "section": "action",
    "description": "Plays animation when the action is triggered"
  },
  {
    "code": "^playAnimationIfNotPlaying$",
    "translate": "playAnimationIfNotPlaying",
    "section": "action",
    "description": "Don't restart animation if this animation is already playing"
  },
  {
    "code": "^finishPlayingLastAnimation$",
    "translate": "finishPlayingLastAnimation",
    "section": "action",
    "description": "Finish last animation, including blend out"
  },
  {
    "code": "^stopLastAnimation$",
    "translate": "stopLastAnimation",
    "section": "action",
    "description": "Stop last animation, skipping blend out"
  },
  {
    "code": "^switchToNeutralTeam$",
    "translate": "switchToNeutralTeam",
    "section": "action",
    "description": "Change team to neutral. This team is allied to all other teams. Will be captured by nearby units unless [core]stayNeutral:true is used"
  },
  {
    "code": "^switchToAggressiveTeam$",
    "translate": "switchToAggressiveTeam",
    "section": "action",
    "description": "Change to a built-in team that is aggressive to all other teams. Does not get captured."
  },
  {
    "code": "^switchToTeam$",
    "translate": "switchToTeam",
    "section": "action",
    "description": "Team id to switch to. Starts at 0. (but -1 for a neutral team, -2 for aggressive Team). Also supports dynamic values"
  },
  {
    "code": "^takeResources$",
    "translate": "takeResources",
    "section": "action",
    "description": "Resources to take (required to use take resources). And at-least 1 include key is needed."
  },
  {
    "code": "^takeResources_includeUnitsInTransport$",
    "translate": "takeResources_includeUnitsInTransport",
    "section": "action",
    "description": "Includes cargo units in taking resources"
  },
  {
    "code": "^takeResources_includeParent$",
    "translate": "takeResources_includeParent",
    "section": "action",
    "description": "Include attachment parent or transport parent"
  },
  {
    "code": "^takeResources_includeReference$",
    "translate": "takeResources_includeReference",
    "section": "action",
    "description": "Includes referenced units in taking resources"
  },
  {
    "code": "^takeResources_includeUnitsWithinRange$",
    "translate": "takeResources_includeUnitsWithinRange",
    "section": "action",
    "description": "Includes all units within the specified range"
  },
  {
    "code": "^takeResources_includeUnitsWithinRange_team$",
    "translate": "takeResources_includeUnitsWithinRange_team",
    "section": "action",
    "description": "Used with includeUnitsWithinRange, defaults to own. Can be:  own|ally|allyNotOwn|enemy|neutral|any"
  },
  {
    "code": "^takeResources_excludeUnitsWithoutTags$",
    "translate": "takeResources_excludeUnitsWithoutTags",
    "section": "action",
    "description": "Includes all units without the specified tags in taking resources"
  },
  {
    "code": "^takeResources_excludeUnitsWithTheseResources$",
    "translate": "takeResources_excludeUnitsWithTheseResources",
    "section": "action",
    "description": "Excludes all units with custom prices in them"
  },
  {
    "code": "^takeResources_excludeUnitsWithoutAllResources$",
    "translate": "takeResources_excludeUnitsWithoutAllResources",
    "section": "action",
    "description": "Defaults to true."
  },
  {
    "code": "^takeResources_triggerActionIfAnyCollected$",
    "translate": "takeResources_triggerActionIfAnyCollected",
    "section": "action",
    "description": "Triggers an action if any amount of resources is collected in the current collection action"
  },
  {
    "code": "^takeResources_triggerActionIfNoneCollected$",
    "translate": "takeResources_triggerActionIfNoneCollected",
    "section": "action",
    "description": "Triggers an action if no amount of resources is collected in the current collection action"
  },
  {
    "code": "^takeResources_triggerActionForEach$",
    "translate": "takeResources_triggerActionForEach",
    "section": "action",
    "description": "Calls this action for each unit found by takeResource with the unit as thisActionTarget, and thisActionIndex counting up from zero."
  },
  {
    "code": "^takeResources_discardCollected$",
    "translate": "takeResources_discardCollected",
    "section": "action",
    "description": "Just take resources from targets, don't add(or remove) to self"
  },
  {
    "code": "^takeResources_keepResourcesOnTarget$",
    "translate": "takeResources_keepResourcesOnTarget",
    "section": "action",
    "description": "Don't add/remove resource from target. This clones resources. Use with takeResources_discardCollected and takeResources_triggerActionIfAnyCollected to make a resource detector."
  },
  {
    "code": "^takeResources_maxUnits$",
    "translate": "takeResources_maxUnits",
    "section": "action",
    "description": "Defaults to 1. Takes resources from specified amount of units"
  },
  {
    "code": "^takeResources_searchOnly$",
    "translate": "takeResources_searchOnly",
    "section": "action",
    "description": "Shortcut for maxUnits: 200, discardCollected: true, keepResourcesOnTarget: true to detect resources only"
  },
  {
    "code": "^takeResources_directTransferStoppingAtZero$",
    "translate": "takeResources_directTransferStoppingAtZero",
    "section": "action",
    "description": "If less resources on target than transfer amount, only remaining resources will be transfered. Doesn't support use with some other takeResources_* keys"
  },
  {
    "code": "^convertResource_from$",
    "translate": "convertResource_from",
    "section": "action",
    "description": "Name of custom resource to take from"
  },
  {
    "code": "^convertResource_to$",
    "translate": "convertResource_to",
    "section": "action",
    "description": "Name of custom resource to give to"
  },
  {
    "code": "^convertResource_minAmount$",
    "translate": "convertResource_minAmount",
    "section": "action",
    "description": "Skip if less than this amount in 'from'. Defaults to 0. Likely not needed for most use cases"
  },
  {
    "code": "^convertResource_maxAmount$",
    "translate": "convertResource_maxAmount",
    "section": "action",
    "description": "Max amount to transfer between 'from' and 'to'"
  },
  {
    "code": "^convertResource_multiplyAmountBy$",
    "translate": "convertResource_multiplyAmountBy",
    "section": "action",
    "description": "Defaults to 1. Amount to multiply when adding on 'to' (does not effect amount taken on 'from')"
  },
  {
    "code": "^resourceAmount$",
    "translate": "resourceAmount",
    "section": "action",
    "description": "Name of custom resource to set with the below 3 keys. All keys are optional, and can be used together."
  },
  {
    "code": "^resourceAmount_setValue$",
    "translate": "resourceAmount_setValue",
    "section": "action",
    "description": "Absolute value to set this resource to, ignores current value of resource. Skipped by default"
  },
  {
    "code": "^resourceAmount_addOtherResource$",
    "translate": "resourceAmount_addOtherResource",
    "section": "action",
    "description": "Name of another custom resource to add to this on. Can be used without resourceAmount_setValue, to just add resources. Or with resourceAmount_setValue:0 to copy a resource value."
  },
  {
    "code": "^resourceAmount_multiplyBy$",
    "translate": "resourceAmount_multiplyBy",
    "section": "action",
    "description": "Defaults to 1. Multiple the current or new value by"
  },
  {
    "code": "^attachments_addNewUnits$",
    "translate": "attachments_addNewUnits",
    "section": "action",
    "description": "Adds specified units to attachments"
  },
  {
    "code": "^attachments_deleteNumUnits$",
    "translate": "attachments_deleteNumUnits",
    "section": "action",
    "description": "Removes a specified amount of units attached"
  },
  {
    "code": "^attachments_onlyOnSlots$",
    "translate": "attachments_onlyOnSlots",
    "section": "action",
    "description": "Restrict attachments_* actions to these attachments"
  },
  {
    "code": "^attachments_unload$",
    "translate": "attachments_unload",
    "section": "action",
    "description": "Unload all attachments. Can be used with attachments_onlyOnSlots. Same as unloading transported units"
  },
  {
    "code": "^attachments_disconnect$",
    "translate": "attachments_disconnect",
    "section": "action",
    "description": "Disconnect all attachments in the place they are right now. Can be used with attachments_onlyOnSlots."
  },
  {
    "code": "^disconnectFromParent$",
    "translate": "disconnectFromParent",
    "section": "action",
    "description": "Disconnects this unit from parent's attachment slot"
  },
  {
    "code": "^temporarilyAddTags$",
    "translate": "temporarilyAddTags",
    "section": "action",
    "description": "Add tag to this unit until it is converted or reset (unless convertTo_keepCurrentTags is used)"
  },
  {
    "code": "^temporarilyRemoveTags$",
    "translate": "temporarilyRemoveTags",
    "section": "action",
    "description": "Remove tag from this unit until it is converted or reset (unless convertTo_keepCurrentTags is used)"
  },
  {
    "code": "^resetToDefaultTags$",
    "translate": "resetToDefaultTags",
    "section": "action",
    "description": "Reset to standard tags"
  },
  {
    "code": "^addGlobalTeamTags$",
    "translate": "addGlobalTeamTags",
    "section": "action",
    "description": "Add a tag to player's team. Use with self.globalTeamTags() to create unlocks and upgrades. Unique tags are best to not conflict with other mods."
  },
  {
    "code": "^removeGlobalTeamTags$",
    "translate": "removeGlobalTeamTags",
    "section": "action",
    "description": "Remove a tag from player's team."
  },
  {
    "code": "^showMessageToAllPlayers$",
    "translate": "showMessageToAllPlayers",
    "section": "action",
    "description": "Sends a message to all players"
  },
  {
    "code": "^showMessageToAllEnemyPlayers$",
    "translate": "showMessageToAllEnemyPlayers",
    "section": "action",
    "description": "Sends a message to all enemy players only"
  },
  {
    "code": "^showQuickWarLogToPlayer$",
    "translate": "showQuickWarLogToPlayer",
    "section": "action",
    "description": "Sends a Quick War Log message to the player controlling the unit (in the lower lef)"
  },
  {
    "code": "^showQuickWarLogToAllPlayers$",
    "translate": "showQuickWarLogToAllPlayers",
    "section": "action",
    "description": "Sends a Quick War Log message to all players (in the lower lef)"
  },
  {
    "code": "^debugMessage$",
    "translate": "debugMessage",
    "section": "action",
    "description": "Only shows in Sandbox with Debug mode on."
  },
  {
    "code": "^drawType$",
    "translate": "drawType",
    "section": "effect",
    "description": "Built-in image to use. 0:projectiles.png 1:projectiles_large.png 2:projectiles2.png. Refer to end of sheet for the projectile images."
  },
  {
    "code": "^life$",
    "translate": "life",
    "section": "effect",
    "description": "How long till this projectile gets removed if it hasn't hit a target, 300 might be a good starting point, change depending on speed and range"
  },
  {
    "code": "^lifeRandom$",
    "translate": "lifeRandom",
    "section": "effect",
    "description": "Random offset life by +/- this value"
  },
  {
    "code": "^alsoEmitEffects$",
    "translate": "alsoEmitEffects",
    "section": "effect",
    "description": "Create more effects when created, useful for meta-effects. Note: other 'alsoEmitEffects' on created effects are ignored."
  },
  {
    "code": "^alsoEmitEffectsOnDeath$",
    "translate": "alsoEmitEffectsOnDeath",
    "section": "effect",
    "description": "Create these effects when life runs out."
  },
  {
    "code": "^ifSpawnFailsEmitEffects$",
    "translate": "ifSpawnFailsEmitEffects",
    "section": "effect",
    "description": "If 'spawnChance' for this effects fails then emit these effects instead"
  },
  {
    "code": "^alsoPlaySound$",
    "translate": "alsoPlaySound",
    "section": "effect",
    "description": "Plays sound upon spawning the effect. Use OGG or WAV audio files. Appending a colon with a float value sets the volume"
  },
  {
    "code": "^createWhenOffscreen$",
    "translate": "createWhenOffscreen",
    "section": "effect",
    "description": "Defaults false. When true, effect is created when the unit is offscreen"
  },
  {
    "code": "^createWhenZoomedOut$",
    "translate": "createWhenZoomedOut",
    "section": "effect",
    "description": "Defaults true. Effect is created even when the map is zoomed out. Set to false for improving performance"
  },
  {
    "code": "^createWhenOverLiquid$",
    "translate": "createWhenOverLiquid",
    "section": "effect",
    "description": "Defaults true. Effect is created when the unit is over water"
  },
  {
    "code": "^createWhenOverLand$",
    "translate": "createWhenOverLand",
    "section": "effect",
    "description": "Defaults true. Effect is created when the unit is over land"
  },
  {
    "code": "^spawnChance$",
    "translate": "spawnChance",
    "section": "effect",
    "description": "Default 1. If less than 1 effect only has a random chance of being created"
  },
  {
    "code": "^showInFog$",
    "translate": "showInFog",
    "section": "effect",
    "description": "Default false. When true, effect is still visible on fog of war"
  },
  {
    "code": "^delayedStartTimer$",
    "translate": "delayedStartTimer",
    "section": "effect",
    "description": "Hide for x time before showing and updating effect."
  },
  {
    "code": "^liveAfterAttachedDies$",
    "translate": "liveAfterAttachedDies",
    "section": "effect",
    "description": "Defaults false when attachedToUnit is being used"
  },
  {
    "code": "^priority$",
    "translate": "priority",
    "section": "effect",
    "description": "Defaults to high. verylow/low/high/veryhigh/critical. Takes effect when too many effects are being shown at once."
  },
  {
    "code": "^attachedToUnit$",
    "translate": "attachedToUnit",
    "section": "effect",
    "description": "Attach to unit or projectile that created this effect. Will move with this object. Useful for thrust effects"
  },
  {
    "code": "^alwayStartDirAtZero$",
    "translate": "alwayStartDirAtZero",
    "section": "effect",
    "description": "Ignore source/attached unit dir"
  },
  {
    "code": "^atmospheric$",
    "translate": "atmospheric",
    "section": "effect",
    "description": "Apply drag to slow this effect down and add small wind effects"
  },
  {
    "code": "^physics$",
    "translate": "physics",
    "section": "effect",
    "description": "Fall to ground and bounces. Needs height to take effect."
  },
  {
    "code": "^physicsGravity$",
    "translate": "physicsGravity",
    "section": "effect",
    "description": "Defaults to 1. height speed acceleration when physics: true"
  },
  {
    "code": "^xOffsetRelative$",
    "translate": "xOffsetRelative",
    "section": "effect",
    "description": "Offset starting effect position. Relative to direction of attached turret, projectile, unit"
  },
  {
    "code": "^yOffsetRelative$",
    "translate": "yOffsetRelative",
    "section": "effect",
    "description": "Offset starting effect position. Relative to direction of attached turret, projectile, unit"
  },
  {
    "code": "^xOffsetRelativeRandom$",
    "translate": "xOffsetRelativeRandom",
    "section": "effect",
    "description": "Random offset by +/- this value"
  },
  {
    "code": "^yOffsetRelativeRandom$",
    "translate": "yOffsetRelativeRandom",
    "section": "effect",
    "description": "Random offset by +/- this value"
  },
  {
    "code": "^xOffsetAbsolute$",
    "translate": "xOffsetAbsolute",
    "section": "effect",
    "description": "Offset starting effect by position ignoring direction of attached turret, projectile, unit"
  },
  {
    "code": "^yOffsetAbsolute$",
    "translate": "yOffsetAbsolute",
    "section": "effect",
    "description": "Offset starting effect by position ignoring direction of attached turret, projectile, unit"
  },
  {
    "code": "^xOffsetAbsoluteRandom$",
    "translate": "xOffsetAbsoluteRandom",
    "section": "effect",
    "description": "Random offset by +/- this value"
  },
  {
    "code": "^yOffsetAbsoluteRandom$",
    "translate": "yOffsetAbsoluteRandom",
    "section": "effect",
    "description": "Random offset by +/- this value"
  },
  {
    "code": "^xSpeedRelative$",
    "translate": "xSpeedRelative",
    "section": "effect",
    "description": "Moves the effect sprite on relative horizontal position with specified speed. Negative will move left relative to source, positive will move right relative to source. Useful for thrust effects for moving units"
  },
  {
    "code": "^ySpeedRelative$",
    "translate": "ySpeedRelative",
    "section": "effect",
    "description": "Moves the effect sprite on relative vertical position with specified speed. Negative will move down relative to source, positive will move up relative to source. Useful for thrust effects for moving units"
  },
  {
    "code": "^xSpeedRelativeRandom$",
    "translate": "xSpeedRelativeRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^ySpeedRelativeRandom$",
    "translate": "ySpeedRelativeRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^xSpeedAbsolute$",
    "translate": "xSpeedAbsolute",
    "section": "effect",
    "description": "Moves the effect sprite on absolute horizontal position with specified speed. Negative will move left relative to map, positive will move right relative to map. Useful for smoke effects on structures"
  },
  {
    "code": "^ySpeedAbsolute$",
    "translate": "ySpeedAbsolute",
    "section": "effect",
    "description": "Moves the effect sprite on absolute vertical position with specified speed. Negative will move down relative to map, positive will move up relative to map. Useful for smoke effects on structures"
  },
  {
    "code": "^xSpeedAbsoluteRandom$",
    "translate": "xSpeedAbsoluteRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^ySpeedAbsoluteRandom$",
    "translate": "ySpeedAbsoluteRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^hOffset$",
    "translate": "hOffset",
    "section": "effect",
    "description": "height offset from source. May be mistakenly confused with yOffsetAbsolute"
  },
  {
    "code": "^hOffsetRandom$",
    "translate": "hOffsetRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^hSpeed$",
    "translate": "hSpeed",
    "section": "effect",
    "description": "Sets the speed to change the height of the effect"
  },
  {
    "code": "^hSpeedRandom$",
    "translate": "hSpeedRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^dirOffset$",
    "translate": "dirOffset",
    "section": "effect",
    "description": "Sets the static direction of the effect"
  },
  {
    "code": "^dirOffsetRandom$",
    "translate": "dirOffsetRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^dirSpeed$",
    "translate": "dirSpeed",
    "section": "effect",
    "description": "Sets the rotation speed of the effect"
  },
  {
    "code": "^dirSpeedRandom$",
    "translate": "dirSpeedRandom",
    "section": "effect",
    "description": "Randomly change by -value to value"
  },
  {
    "code": "^frameIndex$",
    "translate": "frameIndex",
    "section": "effect",
    "description": "Use a specific frame from strip index"
  },
  {
    "code": "^frameIndexRandom$",
    "translate": "frameIndexRandom",
    "section": "effect",
    "description": "Use random frame from strip index"
  },
  {
    "code": "^stripIndex$",
    "translate": "stripIndex",
    "section": "effect",
    "description": "A built-in image set to use. Cannot be used with custom image. Options: effects/explode_big/light_50/flame/effects/effects2/projectiles/projectiles2/explode_bits"
  },
  {
    "code": "^image$",
    "translate": "image",
    "section": "effect",
    "description": "File path to png image."
  },
  {
    "code": "^imageShadow$",
    "translate": "imageShadow",
    "section": "effect",
    "description": "Custom image file to use for shadows"
  },
  {
    "code": "^scaleTo$",
    "translate": "scaleTo",
    "section": "effect",
    "description": "Defaults to 1. Resizes the unit into the specified scale"
  },
  {
    "code": "^scaleFrom$",
    "translate": "scaleFrom",
    "section": "effect",
    "description": "Defaults to 1. Resizes the unit from the specified scale"
  },
  {
    "code": "^color$",
    "translate": "color",
    "section": "effect",
    "description": "Recolors this projectile using a hex value."
  },
  {
    "code": "^teamColorRatio$",
    "translate": "teamColorRatio",
    "section": "effect",
    "description": "Mix 0-1 of team colour into color field"
  },
  {
    "code": "^drawUnderUnits$",
    "translate": "drawUnderUnits",
    "section": "effect",
    "description": "If true, renders the projectile under units. Great for torpedos."
  },
  {
    "code": "^fadeInTime$",
    "translate": "fadeInTime",
    "section": "effect",
    "description": "Fade alpha from 0% to 100% for this time at start"
  },
  {
    "code": "^fadeOut$",
    "translate": "fadeOut",
    "section": "effect",
    "description": "Fade alpha from 100% to 0% based on life. Set alpha is higher than 1 to delay fade"
  },
  {
    "code": "^alpha$",
    "translate": "alpha",
    "section": "effect",
    "description": "Capped between 0-1. Can be set higher than 1 to delay fadeOut effects"
  },
  {
    "code": "^shadow$",
    "translate": "shadow",
    "section": "effect",
    "description": "True to draw a shadow. Forced true if imageShadow is used"
  },
  {
    "code": "^pivotOffset$",
    "translate": "pivotOffset",
    "section": "effect",
    "description": "Similar to dirOffset, this will also rotate relative keys and child elements"
  },
  {
    "code": "^pivotOffsetRandom$",
    "translate": "pivotOffsetRandom",
    "section": "effect",
    "description": "Offsets pivot between +/- of specified value"
  },
  {
    "code": "^total_frames$",
    "translate": "total_frames",
    "section": "effect",
    "description": "Defaults to 1. Animations require this."
  },
  {
    "code": "^animateFrameStart$",
    "translate": "animateFrameStart",
    "section": "effect",
    "description": "Starting frame for the animation"
  },
  {
    "code": "^animateFrameEnd$",
    "translate": "animateFrameEnd",
    "section": "effect",
    "description": "Ending frame for the animation"
  },
  {
    "code": "^animateFramePingPong$",
    "translate": "animateFramePingPong",
    "section": "effect",
    "description": "If true, animation will go back and forth within the frames"
  },
  {
    "code": "^animateFrameSpeed$",
    "translate": "animateFrameSpeed",
    "section": "effect",
    "description": "Sets the animation speed. The lower the value, the slower it plays"
  },
  {
    "code": "^animateFrameSpeedRandom$",
    "translate": "animateFrameSpeedRandom",
    "section": "effect",
    "description": "Randomizes how fast the effect animation plays"
  },
  {
    "code": "^animateFrameLooping$",
    "translate": "animateFrameLooping",
    "section": "effect",
    "description": "Defaults false. When false effect is removed when animation ends"
  },
  {
    "code": "^onActions$",
    "translate": "onActions",
    "section": "animation",
    "description": "Automatically plays the animation on specified events. Options: move, attack, idle, underConstruction, underConstructionWithLinkedBuiltTime, queuedUnits, repair"
  },
  {
    "code": "^onActionsQueuedUnitPlayAt$",
    "translate": "onActionsQueuedUnitPlayAt",
    "section": "animation",
    "description": "For onAction: queuedUnits. Amount queue needs to reach before starting, set between 0-1"
  },
  {
    "code": "^blendIn$",
    "translate": "blendIn",
    "section": "animation",
    "description": "Blend with last animation for this time"
  },
  {
    "code": "^blendOut$",
    "translate": "blendOut",
    "section": "animation",
    "description": "Blend with next animation for this time"
  },
  {
    "code": "^pingPong$",
    "translate": "pingPong",
    "section": "animation",
    "description": "Play animation in reverse after it ends"
  },
  {
    "code": "^KeyframeTimeScale$",
    "translate": "KeyframeTimeScale",
    "section": "animation",
    "description": "Scales all keyframe times, useful to make an animation faster/slower without changing everything"
  },
  {
    "code": "^arm\\d+_\\d+s$",
    "translate": "arm{1}_{2}s",
    "section": "animation",
    "description": "Add a keyframe. Used to create animations for multiple actions.",
    "rule": "^arm(\\d+)_(\\d+)s$"
  },
  {
    "code": "^leg\\d+_\\d+s$",
    "translate": "leg{1}_{2}s",
    "section": "animation",
    "description": "Add a keyframe. Used to create animations for multiple actions.",
    "rule": "^leg(\\d+)_(\\d+)s$"
  },
  {
    "code": "^body_\\d+s$",
    "translate": "body_{1}s",
    "section": "animation",
    "description": "Add keyframes to the main subject at any time. The body only allows the use of frame and scale.",
    "rule": "^body_(\\d+)s$"
  },
  {
    "code": "^effect_\\d+s$",
    "translate": "effect_{1}s",
    "section": "animation",
    "description": "Produce effects when playing animations.",
    "rule": "^effect_(\\d+)s$"
  },
  {
    "code": "^direction_units$",
    "translate": "direction_units",
    "section": "animation",
    "description": "Overrides [graphics]animation_direction_units while this animation is playing"
  },
  {
    "code": "^direction_strideX$",
    "translate": "direction_strideX",
    "section": "animation",
    "description": "Overrides [graphics]animation_direction_strideX"
  },
  {
    "code": "^direction_strideY$",
    "translate": "direction_strideY",
    "section": "animation",
    "description": "Overrides [graphics]animation_direction_strideY"
  },
  {
    "code": "^direction_starting$",
    "translate": "direction_starting",
    "section": "animation",
    "description": "Overrides [graphics]animation_direction_starting"
  },
  {
    "code": "^anyRuleInGroup$",
    "translate": "anyRuleInGroup",
    "section": "placementRule",
    "description": "(Only require 1 of the rules in this group pass, instead of all. Use the same group name on other placement rules to create a group.)"
  },
  {
    "code": "^searchTags$",
    "translate": "searchTags",
    "section": "placementRule",
    "description": "Search for any unit with at least one of these tags"
  },
  {
    "code": "^searchTeam$",
    "translate": "searchTeam",
    "section": "placementRule",
    "description": "Teams to include in search, can be: own|neutral|allyNotOwn|ally|enemy|any"
  },
  {
    "code": "^searchOffsetX$",
    "translate": "searchOffsetX",
    "section": "placementRule",
    "description": "defaults to 0"
  },
  {
    "code": "^searchOffsetY$",
    "translate": "searchOffsetY",
    "section": "placementRule",
    "description": "defaults to 0"
  },
  {
    "code": "^searchDistance$",
    "translate": "searchDistance",
    "section": "placementRule",
    "description": "Required"
  },
  {
    "code": "^excludeIncompleteBuildings$",
    "translate": "excludeIncompleteBuildings",
    "section": "placementRule",
    "description": "defaults to false. Might want to set to true depending on the requirement reason"
  },
  {
    "code": "^excludeNonBuildings$",
    "translate": "excludeNonBuildings",
    "section": "placementRule",
    "description": "defaults to false"
  },
  {
    "code": "^minCount$",
    "translate": "minCount",
    "section": "placementRule",
    "description": "Set min amount of units that need to be found in search. (eg needs to be near something). Defaults to 0"
  },
  {
    "code": "^maxCount$",
    "translate": "maxCount",
    "section": "placementRule",
    "description": "Set max amount of units before match fails (eg cannot be close to something). Defaults to unlimited"
  },
  {
    "code": "^blocksPlacement$",
    "translate": "blocksPlacement",
    "section": "placementRule",
    "description": "Defaults to true."
  },
  {
    "code": "^cannotPlaceMessage(_.+)?$",
    "translate": "cannotPlaceMessage",
    "section": "placementRule",
    "description": "Highly Recommended. Message shown to player if this rule fails (will be first failing rule if using anyRuleInGroup)."
  },
  {
    "code": "^checkEachTile$",
    "translate": "checkEachTile",
    "section": "placementRule",
    "description": "defaults to true (set to false to only test unit center, true checks each tile under the unit which shows up on the placement grid. Can be easier to see requirements with true)"
  },
  {
    "code": "^displayName(_.+)?$",
    "translate": "displayName",
    "section": "global_resource",
    "description": "Name of this resource in UI"
  },
  {
    "code": "^displayNameShort(_.+)?$",
    "translate": "displayNameShort",
    "section": "global_resource",
    "description": "Resource name on smaller UI elements like action hovertext (Defaults to displayName)"
  },
  {
    "code": "^hidden$",
    "translate": "hidden",
    "section": "global_resource",
    "description": "When true, hides the arm/leg"
  },
  {
    "code": "^priority$",
    "translate": "priority",
    "section": "global_resource",
    "description": "Defaults to high. verylow/low/high/veryhigh/critical. Takes effect when too many effects are being shown at once."
  },
  {
    "code": "^displayColor$",
    "translate": "displayColor",
    "section": "global_resource",
    "description": "Color, can be hex with optional alpha"
  },
  {
    "code": "^displayRoundedDown$",
    "translate": "displayRoundedDown",
    "section": "global_resource",
    "description": "Don't show decimal places to the player"
  },
  {
    "code": "^displayTextPrefix$",
    "translate": "displayTextPrefix",
    "section": "global_resource",
    "description": "Adds a string before the resource value"
  },
  {
    "code": "^displayTextPostfix$",
    "translate": "displayTextPostfix",
    "section": "global_resource",
    "description": "Adds a string after the resource value"
  },
  {
    "code": "^displayTextAppendResource$",
    "translate": "displayTextAppendResource",
    "section": "global_resource",
    "description": "Appends another resource after this resource. It's recommended to give a \"hidden\" key on the appended resource to hide duplicate."
  },
  {
    "code": "^displayWhenZero$",
    "translate": "displayWhenZero",
    "section": "global_resource",
    "description": "Displays the resource even when empty. Set as false by default"
  },
  {
    "code": "^displayPos$",
    "translate": "displayPos",
    "section": "global_resource",
    "description": "Sets the position of the globa resource in the screen"
  },
  {
    "code": "^iconImage$",
    "translate": "iconImage",
    "section": "global_resource",
    "description": "Sets a thumbnail image for the action button"
  },
  {
    "code": "^iconImageUseInText$",
    "translate": "iconImageUseInText",
    "section": "global_resource",
    "description": "Default as true; Shows resource icon in action description"
  },
  {
    "code": "^displayNameHideWhenIconShownInText$",
    "translate": "displayNameHideWhenIconShownInText",
    "section": "global_resource",
    "description": "Default as false"
  },
  {
    "code": "^displayNameHideWhenIconShownInHUD$",
    "translate": "displayNameHideWhenIconShownInHUD",
    "section": "global_resource",
    "description": "Hides the icon in menus referring to resource when true. Default as false"
  },
  {
    "code": "^displayColorUseInText$",
    "translate": "displayColorUseInText",
    "section": "global_resource",
    "description": "Shows color in action description"
  },
  {
    "code": "^displayInHud$",
    "translate": "displayInHud",
    "section": "global_resource",
    "description": "For resources used in appendResourceInHUD that shouldn't be hidden: true. Defaults true."
  },
  {
    "code": "^appendResourceInHUD$",
    "translate": "appendResourceInHUD",
    "section": "global_resource",
    "description": "stacks another resource specified after this resource on the HUD."
  },
  {
    "code": "^appendResourceInHUD_whenThisZero$",
    "translate": "appendResourceInHUD_whenThisZero",
    "section": "global_resource",
    "description": "Defaults as true. When set as false, allows appended resource to be hidden with the parent resource."
  },
  {
    "code": "^displayPrefixInHUD$",
    "translate": "displayPrefixInHUD",
    "section": "global_resource",
    "description": "Displays text to show before resource value - replaces resource name and removes the colon separator"
  },
  {
    "code": "^displayPostfixInHUD$",
    "translate": "displayPostfixInHUD",
    "section": "global_resource",
    "description": "Similar to the prefix counterpart, but is displayed after the resource value"
  },
  {
    "code": "^valueInStats$",
    "translate": "valueInStats",
    "section": "global_resource",
    "description": "Affects post game stats and replay leaderboard. Defaults to 1."
  },
  {
    "code": "^displayTextAppendResourceWithGap$",
    "translate": "displayTextAppendResourceWithGap",
    "section": "global_resource",
    "description": "Adds a space between this and the appended resource. Defaults as false."
  },
  {
    "code": "^displayDigitGrouping$",
    "translate": "displayDigitGrouping",
    "section": "global_resource",
    "description": "Sets the symbol for separating place units in: none, comma, space"
  },
  {
    "code": "^displayName(_.+)?$",
    "translate": "displayName",
    "section": "resource",
    "description": "Name of this resource in UI"
  },
  {
    "code": "^displayNameShort(_.+)?$",
    "translate": "displayNameShort",
    "section": "resource",
    "description": "Resource name on smaller UI elements like action hovertext (Defaults to displayName)"
  },
  {
    "code": "^hidden$",
    "translate": "hidden",
    "section": "resource",
    "description": "When true, hides the arm/leg"
  },
  {
    "code": "^equivalentGlobalResourceForAI$",
    "translate": "equivalentGlobalResourceForAI",
    "section": "resource",
    "description": "Used to hint to the AI that a resource node with a local resources could be used to get a different global resource. Eg when a harvester unloads the resource"
  },
  {
    "code": "^displayRoundedDown$",
    "translate": "displayRoundedDown",
    "section": "resource",
    "description": "Don't show decimal places to the player"
  },
  {
    "code": "^image$",
    "translate": "image",
    "section": "decal",
    "description": "File path to png image."
  },
  {
    "code": "^layer$",
    "translate": "layer",
    "section": "decal",
    "description": "Sets the layer of the decal, values from lowest to highest - shadow,  beforeBody, afterBody, onTop, beforeUI, inactive"
  },
  {
    "code": "^order$",
    "translate": "order",
    "section": "decal",
    "description": "Defaults as 0, sets a more discrete layering if 2 or more decals takes same layer type. Otherwise order in INI file will be used."
  },
  {
    "code": "^teamColors$",
    "translate": "teamColors",
    "section": "decal",
    "description": "When true, automatically reassigns team color to respective teams"
  },
  {
    "code": "^alpha$",
    "translate": "alpha",
    "section": "decal",
    "description": "Capped between 0-1. Can be set higher than 1 to delay fadeOut effects"
  },
  {
    "code": "^isVisible$",
    "translate": "isVisible",
    "section": "decal",
    "description": "Hide this build link if true in this unit UI."
  },
  {
    "code": "^onlyWhenSelectedByOwnPlayer$",
    "translate": "onlyWhenSelectedByOwnPlayer",
    "section": "decal",
    "description": "Defaults as false, displays the decal only if the owner player clicks on the unit"
  },
  {
    "code": "^onlyWhenSelectedByEnemyPlayer$",
    "translate": "onlyWhenSelectedByEnemyPlayer",
    "section": "decal",
    "description": "Defaults as false, displays the decal only if the enemy player clicks on the unit"
  },
  {
    "code": "^onlyWhenSelectedByAllyNotOwnPlayer$",
    "translate": "onlyWhenSelectedByAllyNotOwnPlayer",
    "section": "decal",
    "description": "Defaults as false, displays the decal only if the allied player clicks on the unit"
  },
  {
    "code": "^onlyWhenSelectedByAnyPlayer$",
    "translate": "onlyWhenSelectedByAnyPlayer",
    "section": "decal",
    "description": "Defaults as false, displays the decal only if any player clicks on the unit"
  },
  {
    "code": "^includeParentsSelection$",
    "translate": "includeParentsSelection",
    "section": "decal",
    "description": "Useable with onlyWhenSelectedBy[insertplayer], will also checks parent's selection when true. Useful with attachments."
  },
  {
    "code": "^onlyTeam$",
    "translate": "onlyTeam",
    "section": "decal",
    "description": "Draws the decal if value matches the player from the following: own, notOwn, ally, allyNotOwn,  enemy, any"
  },
  {
    "code": "^onlyWhileActive$",
    "translate": "onlyWhileActive",
    "section": "decal",
    "description": "Draws the decal only if the unit is fully built"
  },
  {
    "code": "^onlyWhileAlive$",
    "translate": "onlyWhileAlive",
    "section": "decal",
    "description": "Draws the decal only if the unit is alive (If beforeUI layer default true, else default false)"
  },
  {
    "code": "^onlyInPreview$",
    "translate": "onlyInPreview",
    "section": "decal",
    "description": "Only show in sidebar, and building placement preview"
  },
  {
    "code": "^onlyWithZoomLevelOrMore$",
    "translate": "onlyWithZoomLevelOrMore",
    "section": "decal",
    "description": "Draws the decal only if the zoom level matches or exceeds it, very useful for making 3D units more optimized."
  },
  {
    "code": "^onlyOnNonPreview$",
    "translate": "onlyOnNonPreview",
    "section": "decal",
    "description": "Draws the decal only on the unit itself, not on the preview from building or in sidebar interface"
  },
  {
    "code": "^onlyPlayersWithUnitControl$",
    "translate": "onlyPlayersWithUnitControl",
    "section": "decal",
    "description": "Draws the decal if a player that selects it has control (that includes shared units in multiplayer)"
  },
  {
    "code": "^onlyOnBodyFrameOf$",
    "translate": "onlyOnBodyFrameOf",
    "section": "decal",
    "description": "Only draw decal when body frame is equal to this"
  },
  {
    "code": "^onlyInBlueprint$",
    "translate": "onlyInBlueprint",
    "section": "decal",
    "description": "Untested prototype"
  },
  {
    "code": "^onlyOnNonBlueprint$",
    "translate": "onlyOnNonBlueprint",
    "section": "decal",
    "description": "Untested prototype"
  },
  {
    "code": "^xOffsetRelative$",
    "translate": "xOffsetRelative",
    "section": "decal",
    "description": "Offset starting effect position. Relative to direction of attached turret, projectile, unit"
  },
  {
    "code": "^yOffsetRelative$",
    "translate": "yOffsetRelative",
    "section": "decal",
    "description": "Offset starting effect position. Relative to direction of attached turret, projectile, unit"
  },
  {
    "code": "^xOffsetAbsolute$",
    "translate": "xOffsetAbsolute",
    "section": "decal",
    "description": "Offset starting effect by position ignoring direction of attached turret, projectile, unit"
  },
  {
    "code": "^yOffsetAbsolute$",
    "translate": "yOffsetAbsolute",
    "section": "decal",
    "description": "Offset starting effect by position ignoring direction of attached turret, projectile, unit"
  },
  {
    "code": "^hOffset$",
    "translate": "hOffset",
    "section": "decal",
    "description": "height offset from source. May be mistakenly confused with yOffsetAbsolute"
  },
  {
    "code": "^dirOffset$",
    "translate": "dirOffset",
    "section": "decal",
    "description": "Sets the static direction of the effect"
  },
  {
    "code": "^pivotOffset$",
    "translate": "pivotOffset",
    "section": "decal",
    "description": "Similar to dirOffset, this will also rotate relative keys and child elements"
  },
  {
    "code": "^alwaysStartDirAtZero$",
    "translate": "alwaysStartDirAtZero",
    "section": "decal",
    "description": "Keeps the decal on north direction regardless of the unit's direction value,  useful for custom in-unit interfaces"
  },
  {
    "code": "^imageStack$",
    "translate": "imageStack",
    "section": "decal",
    "description": "Takes one or more image with occassional multipliers for stacking. Also useful for using image stack from a MagicaVoxel slice export"
  },
  {
    "code": "^imageScale$",
    "translate": "imageScale",
    "section": "decal",
    "description": "Resize image. Defaults to 1. Effects leg, and shadow images as well."
  },
  {
    "code": "^imageScaleX$",
    "translate": "imageScaleX",
    "section": "decal",
    "description": "Dynamic value"
  },
  {
    "code": "^imageScaleY$",
    "translate": "imageScaleY",
    "section": "decal",
    "description": "Dynamic value"
  },
  {
    "code": "^stack_hOffset$",
    "translate": "stack_hOffset",
    "section": "decal",
    "description": "Sets the height of every layer in a stack. 1 layer = 1 pixel. Can take negative values."
  },
  {
    "code": "^stack_frameOffset$",
    "translate": "stack_frameOffset",
    "section": "decal",
    "description": "Useful for making 3D units, frame to offset by in imageStack. Often a value of 1 is useful in a sprite sheet."
  },
  {
    "code": "^stack_drawInReverseOrder$",
    "translate": "stack_drawInReverseOrder",
    "section": "decal",
    "description": "Renders the stack in the opposite way - last frame goes on bottom, first frame goes to top"
  },
  {
    "code": "^stack_indexStart$",
    "translate": "stack_indexStart",
    "section": "decal",
    "description": "Offset to start drawing images in the image stack"
  },
  {
    "code": "^stack_indexCount$",
    "translate": "stack_indexCount",
    "section": "decal",
    "description": "Number of images in the image stack to draw."
  },
  {
    "code": "^total_frames$",
    "translate": "total_frames",
    "section": "decal",
    "description": "Defaults to 1. Animations require this."
  },
  {
    "code": "^frame_width$",
    "translate": "frame_width",
    "section": "decal",
    "description": "Calculated for you if total frames is set, but can be overridden"
  },
  {
    "code": "^frame_height$",
    "translate": "frame_height",
    "section": "decal",
    "description": "Defaults to image height"
  },
  {
    "code": "^frame$",
    "translate": "frame",
    "section": "decal",
    "description": "Built-in image frame to use, starts at zero."
  },
  {
    "code": "^addBodyFrameMultipliedBy$",
    "translate": "addBodyFrameMultipliedBy",
    "section": "decal",
    "description": "Add body frame number to this decal when set to 1."
  },
  {
    "code": "^image_shadow$",
    "translate": "image_shadow",
    "section": "decal",
    "description": "Image file, NONE, AUTO or AUTO_ANIMATED. (AUTO  will use image and make it transparent black only.)"
  },
  {
    "code": "^shadowOffsetX$",
    "translate": "shadowOffsetX",
    "section": "decal",
    "description": "Adjusts shadow horizontally"
  },
  {
    "code": "^shadowOffsetY$",
    "translate": "shadowOffsetY",
    "section": "decal",
    "description": "Adjusts shadow vertically"
  },
  {
    "code": "^basePosition$",
    "translate": "basePosition",
    "section": "decal",
    "description": "Attaches the decal on the specified marker. use \"self\" if attaching it to the unit itself"
  },
  {
    "code": "^basePositionFromLegEnd$",
    "translate": "basePositionFromLegEnd",
    "section": "decal",
    "description": "Attaches the decal to the specified leg or arm ending."
  },
  {
    "code": "^basePositionFromTurret$",
    "translate": "basePositionFromTurret",
    "section": "decal",
    "description": "Attaches the decal to the specified turret"
  },
  {
    "code": "^drawLineTo$",
    "translate": "drawLineTo",
    "section": "decal",
    "description": "Draws a line from the unit to the specified marker, useful for custom waypoints"
  },
  {
    "code": "^color$",
    "translate": "color",
    "section": "decal",
    "description": "Recolors this projectile using a hex value."
  },
  {
    "code": "^lineWidth$",
    "translate": "lineWidth",
    "section": "decal",
    "description": "Sets the width of the drawn line"
  },
  {
    "code": "^@copyFromSection$",
    "translate": "@copyFromSection",
    "section": ".+",
    "description": "Use in any section to include keys from a section or template. (Comma separated for multiple)"
  },
  {
    "code": "^@copyFrom_skipThisSection$",
    "translate": "@copyFrom_skipThisSection",
    "section": ".+",
    "description": "Use in any section to make [core]copyFrom not copy into it. Eg not copy an action when overriding"
  },
  {
    "code": "^@define .+$",
    "translate": "@define {1}",
    "section": ".+",
    "description": "Define a local variable within a section (best outside of template)",
    "rule": "^@define (.+)$"
  },
  {
    "code": "^@global .+$",
    "translate": "@global {1}",
    "section": ".+",
    "description": "Define a global variable used in all sections. Local variables have a higher priority",
    "rule": "^@global (.+)$"
  },
  {
    "code": "^@memory .+$",
    "translate": "@memory {1}",
    "section": ".+",
    "description": "Define a memory for this unit, its type must be defined as well.",
    "rule": "^@memory (.+)$"
  },
  {
    "code": "^title$",
    "translate": "title",
    "section": "mod",
    "description": "Sets the title of the mod package"
  },
  {
    "code": "^tags$",
    "translate": "tags",
    "section": "mod",
    "description": "List of comma separated strings. Used to classify units, create special actions and balances."
  },
  {
    "code": "^minVersion$",
    "translate": "minVersion",
    "section": "mod",
    "description": "Declares the minimum version compatible for the mod. It is important to declare one when using decals and other modding keys starting on version 1.15p9 beta"
  },
  {
    "code": "^thumbnail$",
    "translate": "thumbnail",
    "section": "mod",
    "description": "Sets the mod's thumbnail in Steam Workshop"
  },
  {
    "code": "^description$",
    "translate": "description",
    "section": "mod",
    "description": "Mod description"
  },
  {
    "code": "^sourceFolder$",
    "translate": "sourceFolder",
    "section": "music",
    "description": "Sets where the custom music will be played for the mod"
  },
  {
    "code": "^whenUsingUnitsFromThisMod_playExclusively$",
    "translate": "whenUsingUnitsFromThisMod_playExclusively",
    "section": "music",
    "description": "Only plays music from this mod"
  }
]